Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    APOSTROPHE
    CASE
    COMMENT
    CONST
    FILE
    GOTO
    LABEL
    NIL
    PACKED
    PROCEDURE
    READ
    RECORD
    REPEAT
    SET
    TYPE
    UNTIL
    WITH
    WRITE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON bloco PERIOD
Rule 2     bloco -> declaracoes comando_composto
Rule 3     declaracoes -> VAR declaracoes_variaveis
Rule 4     declaracoes -> declaracao_funcao
Rule 5     declaracoes -> vazio
Rule 6     bloco_funcao -> VAR declaracoes_variaveis comando_composto
Rule 7     bloco_funcao -> comando_composto
Rule 8     declaracao -> VAR declaracoes_variaveis
Rule 9     declaracao -> declaracao_funcao
Rule 10    declaracoes_variaveis -> declaracoes_variaveis declaracao_variavel
Rule 11    declaracoes_variaveis -> declaracao_variavel
Rule 12    declaracao_variavel -> lista_ids COLON especificacao_tipo SEMICOLON
Rule 13    lista_ids -> lista_ids COMMA ID
Rule 14    lista_ids -> ID
Rule 15    especificacao_tipo -> INTEGER_TYPE
Rule 16    especificacao_tipo -> REAL_TYPE
Rule 17    especificacao_tipo -> BOOLEAN
Rule 18    especificacao_tipo -> STRING_TYPE
Rule 19    especificacao_tipo -> CHAR_TYPE
Rule 20    especificacao_tipo -> tipo_array
Rule 21    tipo_array -> ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipo
Rule 22    comando_composto -> BEGIN lista_comandos END
Rule 23    lista_comandos -> lista_comandos SEMICOLON comando
Rule 24    lista_comandos -> comando
Rule 25    comando -> comando_composto
Rule 26    comando -> comando_atribuicao
Rule 27    comando -> comando_if
Rule 28    comando -> comando_while
Rule 29    comando -> comando_for
Rule 30    comando -> chamada_procedimento
Rule 31    comando -> comando_halt
Rule 32    comando -> vazio
Rule 33    comando_atribuicao -> variavel ASSIGN expressao
Rule 34    variavel -> ID
Rule 35    variavel -> ID LBRACKET expressao RBRACKET
Rule 36    comando_if -> IF expressao THEN comando
Rule 37    comando_if -> IF expressao THEN comando ELSE comando
Rule 38    comando_while -> WHILE expressao DO comando
Rule 39    comando_for -> FOR ID ASSIGN expressao TO expressao DO comando
Rule 40    comando_for -> FOR ID ASSIGN expressao DOWNTO expressao DO comando
Rule 41    chamada_procedimento -> ID LPAREN lista_expressoes RPAREN
Rule 42    chamada_procedimento -> ID LPAREN RPAREN
Rule 43    chamada_procedimento -> WRITELN LPAREN lista_expressoes RPAREN
Rule 44    chamada_procedimento -> WRITELN LPAREN RPAREN
Rule 45    chamada_procedimento -> READLN LPAREN variavel RPAREN
Rule 46    chamada_procedimento -> READLN LPAREN RPAREN
Rule 47    lista_expressoes -> lista_expressoes COMMA expressao
Rule 48    lista_expressoes -> expressao
Rule 49    expressao -> expressao_simples
Rule 50    expressao -> expressao_simples relop expressao_simples
Rule 51    relop -> EQ
Rule 52    relop -> NEQ
Rule 53    relop -> LT
Rule 54    relop -> LE
Rule 55    relop -> GT
Rule 56    relop -> GE
Rule 57    relop -> IN
Rule 58    expressao_simples -> termo
Rule 59    expressao_simples -> expressao_simples addop termo
Rule 60    addop -> PLUS
Rule 61    addop -> MINUS
Rule 62    addop -> OR
Rule 63    termo -> fator
Rule 64    termo -> termo mulop fator
Rule 65    mulop -> TIMES
Rule 66    mulop -> DIVIDE
Rule 67    mulop -> DIV
Rule 68    mulop -> MOD
Rule 69    mulop -> AND
Rule 70    fator -> variavel
Rule 71    fator -> INTEGER
Rule 72    fator -> REAL
Rule 73    fator -> STRING
Rule 74    fator -> TRUE
Rule 75    fator -> FALSE
Rule 76    fator -> LPAREN expressao RPAREN
Rule 77    fator -> NOT fator
Rule 78    fator -> chamada_funcao
Rule 79    expressao -> variavel COLON INTEGER
Rule 80    expressao -> variavel COLON INTEGER COLON INTEGER
Rule 81    chamada_funcao -> ID LPAREN lista_expressoes RPAREN
Rule 82    chamada_funcao -> ID LPAREN RPAREN
Rule 83    declaracao_funcao -> FUNCTION ID LPAREN lista_parametros RPAREN COLON especificacao_tipo SEMICOLON bloco_funcao SEMICOLON
Rule 84    lista_parametros -> lista_parametros SEMICOLON parametro
Rule 85    lista_parametros -> parametro
Rule 86    parametro -> lista_ids COLON especificacao_tipo
Rule 87    comando_halt -> HALT SEMICOLON
Rule 88    vazio -> <empty>

Terminals, with rules where they appear

AND                  : 69
APOSTROPHE           : 
ARRAY                : 21
ASSIGN               : 33 39 40
BEGIN                : 22
BOOLEAN              : 17
CASE                 : 
CHAR_TYPE            : 19
COLON                : 12 79 80 80 83 86
COMMA                : 13 47
COMMENT              : 
CONST                : 
DIV                  : 67
DIVIDE               : 66
DO                   : 38 39 40
DOWNTO               : 40
ELSE                 : 37
END                  : 22
EQ                   : 51
FALSE                : 75
FILE                 : 
FOR                  : 39 40
FUNCTION             : 83
GE                   : 56
GOTO                 : 
GT                   : 55
HALT                 : 87
ID                   : 1 13 14 34 35 39 40 41 42 81 82 83
IF                   : 36 37
IN                   : 57
INTEGER              : 21 21 71 79 80 80
INTEGER_TYPE         : 15
LABEL                : 
LBRACKET             : 21 35
LE                   : 54
LPAREN               : 41 42 43 44 45 46 76 81 82 83
LT                   : 53
MINUS                : 61
MOD                  : 68
NEQ                  : 52
NIL                  : 
NOT                  : 77
OF                   : 21
OR                   : 62
PACKED               : 
PERIOD               : 1 21 21
PLUS                 : 60
PROCEDURE            : 
PROGRAM              : 1
RBRACKET             : 21 35
READ                 : 
READLN               : 45 46
REAL                 : 72
REAL_TYPE            : 16
RECORD               : 
REPEAT               : 
RPAREN               : 41 42 43 44 45 46 76 81 82 83
SEMICOLON            : 1 12 23 83 83 84 87
SET                  : 
STRING               : 73
STRING_TYPE          : 18
THEN                 : 36 37
TIMES                : 65
TO                   : 39
TRUE                 : 74
TYPE                 : 
UNTIL                : 
VAR                  : 3 6 8
WHILE                : 38
WITH                 : 
WRITE                : 
WRITELN              : 43 44
error                : 

Nonterminals, with rules where they appear

addop                : 59
bloco                : 1
bloco_funcao         : 83
chamada_funcao       : 78
chamada_procedimento : 30
comando              : 23 24 36 37 37 38 39 40
comando_atribuicao   : 26
comando_composto     : 2 6 7 25
comando_for          : 29
comando_halt         : 31
comando_if           : 27
comando_while        : 28
declaracao           : 
declaracao_funcao    : 4 9
declaracao_variavel  : 10 11
declaracoes          : 2
declaracoes_variaveis : 3 6 8 10
especificacao_tipo   : 12 21 83 86
expressao            : 33 35 36 37 38 39 39 40 40 47 48 76
expressao_simples    : 49 50 50 59
fator                : 63 64 77
lista_comandos       : 22 23
lista_expressoes     : 41 43 47 81
lista_ids            : 12 13 86
lista_parametros     : 83 84
mulop                : 64
parametro            : 84 85
programa             : 0
relop                : 50
termo                : 58 59 64
tipo_array           : 20
variavel             : 33 45 70 79 80
vazio                : 5 32

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON bloco PERIOD

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON bloco PERIOD

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON bloco PERIOD

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . bloco PERIOD
    (2) bloco -> . declaracoes comando_composto
    (3) declaracoes -> . VAR declaracoes_variaveis
    (4) declaracoes -> . declaracao_funcao
    (5) declaracoes -> . vazio
    (83) declaracao_funcao -> . FUNCTION ID LPAREN lista_parametros RPAREN COLON especificacao_tipo SEMICOLON bloco_funcao SEMICOLON
    (88) vazio -> .

    VAR             shift and go to state 7
    FUNCTION        shift and go to state 10
    BEGIN           reduce using rule 88 (vazio -> .)

    bloco                          shift and go to state 5
    declaracoes                    shift and go to state 6
    declaracao_funcao              shift and go to state 8
    vazio                          shift and go to state 9

state 5

    (1) programa -> PROGRAM ID SEMICOLON bloco . PERIOD

    PERIOD          shift and go to state 11


state 6

    (2) bloco -> declaracoes . comando_composto
    (22) comando_composto -> . BEGIN lista_comandos END

    BEGIN           shift and go to state 13

    comando_composto               shift and go to state 12

state 7

    (3) declaracoes -> VAR . declaracoes_variaveis
    (10) declaracoes_variaveis -> . declaracoes_variaveis declaracao_variavel
    (11) declaracoes_variaveis -> . declaracao_variavel
    (12) declaracao_variavel -> . lista_ids COLON especificacao_tipo SEMICOLON
    (13) lista_ids -> . lista_ids COMMA ID
    (14) lista_ids -> . ID

    ID              shift and go to state 17

    declaracoes_variaveis          shift and go to state 14
    declaracao_variavel            shift and go to state 15
    lista_ids                      shift and go to state 16

state 8

    (4) declaracoes -> declaracao_funcao .

    BEGIN           reduce using rule 4 (declaracoes -> declaracao_funcao .)


state 9

    (5) declaracoes -> vazio .

    BEGIN           reduce using rule 5 (declaracoes -> vazio .)


state 10

    (83) declaracao_funcao -> FUNCTION . ID LPAREN lista_parametros RPAREN COLON especificacao_tipo SEMICOLON bloco_funcao SEMICOLON

    ID              shift and go to state 18


state 11

    (1) programa -> PROGRAM ID SEMICOLON bloco PERIOD .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON bloco PERIOD .)


state 12

    (2) bloco -> declaracoes comando_composto .

    PERIOD          reduce using rule 2 (bloco -> declaracoes comando_composto .)


state 13

    (22) comando_composto -> BEGIN . lista_comandos END
    (23) lista_comandos -> . lista_comandos SEMICOLON comando
    (24) lista_comandos -> . comando
    (25) comando -> . comando_composto
    (26) comando -> . comando_atribuicao
    (27) comando -> . comando_if
    (28) comando -> . comando_while
    (29) comando -> . comando_for
    (30) comando -> . chamada_procedimento
    (31) comando -> . comando_halt
    (32) comando -> . vazio
    (22) comando_composto -> . BEGIN lista_comandos END
    (33) comando_atribuicao -> . variavel ASSIGN expressao
    (36) comando_if -> . IF expressao THEN comando
    (37) comando_if -> . IF expressao THEN comando ELSE comando
    (38) comando_while -> . WHILE expressao DO comando
    (39) comando_for -> . FOR ID ASSIGN expressao TO expressao DO comando
    (40) comando_for -> . FOR ID ASSIGN expressao DOWNTO expressao DO comando
    (41) chamada_procedimento -> . ID LPAREN lista_expressoes RPAREN
    (42) chamada_procedimento -> . ID LPAREN RPAREN
    (43) chamada_procedimento -> . WRITELN LPAREN lista_expressoes RPAREN
    (44) chamada_procedimento -> . WRITELN LPAREN RPAREN
    (45) chamada_procedimento -> . READLN LPAREN variavel RPAREN
    (46) chamada_procedimento -> . READLN LPAREN RPAREN
    (87) comando_halt -> . HALT SEMICOLON
    (88) vazio -> .
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET

    BEGIN           shift and go to state 13
    IF              shift and go to state 30
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    ID              shift and go to state 33
    WRITELN         shift and go to state 34
    READLN          shift and go to state 35
    HALT            shift and go to state 36
    END             reduce using rule 88 (vazio -> .)
    SEMICOLON       reduce using rule 88 (vazio -> .)

    lista_comandos                 shift and go to state 19
    comando                        shift and go to state 20
    comando_composto               shift and go to state 21
    comando_atribuicao             shift and go to state 22
    comando_if                     shift and go to state 23
    comando_while                  shift and go to state 24
    comando_for                    shift and go to state 25
    chamada_procedimento           shift and go to state 26
    comando_halt                   shift and go to state 27
    vazio                          shift and go to state 28
    variavel                       shift and go to state 29

state 14

    (3) declaracoes -> VAR declaracoes_variaveis .
    (10) declaracoes_variaveis -> declaracoes_variaveis . declaracao_variavel
    (12) declaracao_variavel -> . lista_ids COLON especificacao_tipo SEMICOLON
    (13) lista_ids -> . lista_ids COMMA ID
    (14) lista_ids -> . ID

    BEGIN           reduce using rule 3 (declaracoes -> VAR declaracoes_variaveis .)
    ID              shift and go to state 17

    declaracao_variavel            shift and go to state 37
    lista_ids                      shift and go to state 16

state 15

    (11) declaracoes_variaveis -> declaracao_variavel .

    ID              reduce using rule 11 (declaracoes_variaveis -> declaracao_variavel .)
    BEGIN           reduce using rule 11 (declaracoes_variaveis -> declaracao_variavel .)


state 16

    (12) declaracao_variavel -> lista_ids . COLON especificacao_tipo SEMICOLON
    (13) lista_ids -> lista_ids . COMMA ID

    COLON           shift and go to state 38
    COMMA           shift and go to state 39


state 17

    (14) lista_ids -> ID .

    COLON           reduce using rule 14 (lista_ids -> ID .)
    COMMA           reduce using rule 14 (lista_ids -> ID .)


state 18

    (83) declaracao_funcao -> FUNCTION ID . LPAREN lista_parametros RPAREN COLON especificacao_tipo SEMICOLON bloco_funcao SEMICOLON

    LPAREN          shift and go to state 40


state 19

    (22) comando_composto -> BEGIN lista_comandos . END
    (23) lista_comandos -> lista_comandos . SEMICOLON comando

    END             shift and go to state 41
    SEMICOLON       shift and go to state 42


state 20

    (24) lista_comandos -> comando .

    END             reduce using rule 24 (lista_comandos -> comando .)
    SEMICOLON       reduce using rule 24 (lista_comandos -> comando .)


state 21

    (25) comando -> comando_composto .

    END             reduce using rule 25 (comando -> comando_composto .)
    SEMICOLON       reduce using rule 25 (comando -> comando_composto .)
    ELSE            reduce using rule 25 (comando -> comando_composto .)


state 22

    (26) comando -> comando_atribuicao .

    END             reduce using rule 26 (comando -> comando_atribuicao .)
    SEMICOLON       reduce using rule 26 (comando -> comando_atribuicao .)
    ELSE            reduce using rule 26 (comando -> comando_atribuicao .)


state 23

    (27) comando -> comando_if .

    END             reduce using rule 27 (comando -> comando_if .)
    SEMICOLON       reduce using rule 27 (comando -> comando_if .)
    ELSE            reduce using rule 27 (comando -> comando_if .)


state 24

    (28) comando -> comando_while .

    END             reduce using rule 28 (comando -> comando_while .)
    SEMICOLON       reduce using rule 28 (comando -> comando_while .)
    ELSE            reduce using rule 28 (comando -> comando_while .)


state 25

    (29) comando -> comando_for .

    END             reduce using rule 29 (comando -> comando_for .)
    SEMICOLON       reduce using rule 29 (comando -> comando_for .)
    ELSE            reduce using rule 29 (comando -> comando_for .)


state 26

    (30) comando -> chamada_procedimento .

    END             reduce using rule 30 (comando -> chamada_procedimento .)
    SEMICOLON       reduce using rule 30 (comando -> chamada_procedimento .)
    ELSE            reduce using rule 30 (comando -> chamada_procedimento .)


state 27

    (31) comando -> comando_halt .

    END             reduce using rule 31 (comando -> comando_halt .)
    SEMICOLON       reduce using rule 31 (comando -> comando_halt .)
    ELSE            reduce using rule 31 (comando -> comando_halt .)


state 28

    (32) comando -> vazio .

    END             reduce using rule 32 (comando -> vazio .)
    SEMICOLON       reduce using rule 32 (comando -> vazio .)
    ELSE            reduce using rule 32 (comando -> vazio .)


state 29

    (33) comando_atribuicao -> variavel . ASSIGN expressao

    ASSIGN          shift and go to state 43


state 30

    (36) comando_if -> IF . expressao THEN comando
    (37) comando_if -> IF . expressao THEN comando ELSE comando
    (49) expressao -> . expressao_simples
    (50) expressao -> . expressao_simples relop expressao_simples
    (79) expressao -> . variavel COLON INTEGER
    (80) expressao -> . variavel COLON INTEGER COLON INTEGER
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    ID              shift and go to state 49
    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56

    expressao                      shift and go to state 44
    expressao_simples              shift and go to state 45
    variavel                       shift and go to state 46
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    chamada_funcao                 shift and go to state 57

state 31

    (38) comando_while -> WHILE . expressao DO comando
    (49) expressao -> . expressao_simples
    (50) expressao -> . expressao_simples relop expressao_simples
    (79) expressao -> . variavel COLON INTEGER
    (80) expressao -> . variavel COLON INTEGER COLON INTEGER
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    ID              shift and go to state 49
    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56

    expressao                      shift and go to state 58
    expressao_simples              shift and go to state 45
    variavel                       shift and go to state 46
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    chamada_funcao                 shift and go to state 57

state 32

    (39) comando_for -> FOR . ID ASSIGN expressao TO expressao DO comando
    (40) comando_for -> FOR . ID ASSIGN expressao DOWNTO expressao DO comando

    ID              shift and go to state 59


state 33

    (41) chamada_procedimento -> ID . LPAREN lista_expressoes RPAREN
    (42) chamada_procedimento -> ID . LPAREN RPAREN
    (34) variavel -> ID .
    (35) variavel -> ID . LBRACKET expressao RBRACKET

    LPAREN          shift and go to state 60
    ASSIGN          reduce using rule 34 (variavel -> ID .)
    LBRACKET        shift and go to state 61


state 34

    (43) chamada_procedimento -> WRITELN . LPAREN lista_expressoes RPAREN
    (44) chamada_procedimento -> WRITELN . LPAREN RPAREN

    LPAREN          shift and go to state 62


state 35

    (45) chamada_procedimento -> READLN . LPAREN variavel RPAREN
    (46) chamada_procedimento -> READLN . LPAREN RPAREN

    LPAREN          shift and go to state 63


state 36

    (87) comando_halt -> HALT . SEMICOLON

    SEMICOLON       shift and go to state 64


state 37

    (10) declaracoes_variaveis -> declaracoes_variaveis declaracao_variavel .

    ID              reduce using rule 10 (declaracoes_variaveis -> declaracoes_variaveis declaracao_variavel .)
    BEGIN           reduce using rule 10 (declaracoes_variaveis -> declaracoes_variaveis declaracao_variavel .)


state 38

    (12) declaracao_variavel -> lista_ids COLON . especificacao_tipo SEMICOLON
    (15) especificacao_tipo -> . INTEGER_TYPE
    (16) especificacao_tipo -> . REAL_TYPE
    (17) especificacao_tipo -> . BOOLEAN
    (18) especificacao_tipo -> . STRING_TYPE
    (19) especificacao_tipo -> . CHAR_TYPE
    (20) especificacao_tipo -> . tipo_array
    (21) tipo_array -> . ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipo

    INTEGER_TYPE    shift and go to state 66
    REAL_TYPE       shift and go to state 67
    BOOLEAN         shift and go to state 68
    STRING_TYPE     shift and go to state 69
    CHAR_TYPE       shift and go to state 70
    ARRAY           shift and go to state 72

    especificacao_tipo             shift and go to state 65
    tipo_array                     shift and go to state 71

state 39

    (13) lista_ids -> lista_ids COMMA . ID

    ID              shift and go to state 73


state 40

    (83) declaracao_funcao -> FUNCTION ID LPAREN . lista_parametros RPAREN COLON especificacao_tipo SEMICOLON bloco_funcao SEMICOLON
    (84) lista_parametros -> . lista_parametros SEMICOLON parametro
    (85) lista_parametros -> . parametro
    (86) parametro -> . lista_ids COLON especificacao_tipo
    (13) lista_ids -> . lista_ids COMMA ID
    (14) lista_ids -> . ID

    ID              shift and go to state 17

    lista_parametros               shift and go to state 74
    parametro                      shift and go to state 75
    lista_ids                      shift and go to state 76

state 41

    (22) comando_composto -> BEGIN lista_comandos END .

    PERIOD          reduce using rule 22 (comando_composto -> BEGIN lista_comandos END .)
    END             reduce using rule 22 (comando_composto -> BEGIN lista_comandos END .)
    SEMICOLON       reduce using rule 22 (comando_composto -> BEGIN lista_comandos END .)
    ELSE            reduce using rule 22 (comando_composto -> BEGIN lista_comandos END .)


state 42

    (23) lista_comandos -> lista_comandos SEMICOLON . comando
    (25) comando -> . comando_composto
    (26) comando -> . comando_atribuicao
    (27) comando -> . comando_if
    (28) comando -> . comando_while
    (29) comando -> . comando_for
    (30) comando -> . chamada_procedimento
    (31) comando -> . comando_halt
    (32) comando -> . vazio
    (22) comando_composto -> . BEGIN lista_comandos END
    (33) comando_atribuicao -> . variavel ASSIGN expressao
    (36) comando_if -> . IF expressao THEN comando
    (37) comando_if -> . IF expressao THEN comando ELSE comando
    (38) comando_while -> . WHILE expressao DO comando
    (39) comando_for -> . FOR ID ASSIGN expressao TO expressao DO comando
    (40) comando_for -> . FOR ID ASSIGN expressao DOWNTO expressao DO comando
    (41) chamada_procedimento -> . ID LPAREN lista_expressoes RPAREN
    (42) chamada_procedimento -> . ID LPAREN RPAREN
    (43) chamada_procedimento -> . WRITELN LPAREN lista_expressoes RPAREN
    (44) chamada_procedimento -> . WRITELN LPAREN RPAREN
    (45) chamada_procedimento -> . READLN LPAREN variavel RPAREN
    (46) chamada_procedimento -> . READLN LPAREN RPAREN
    (87) comando_halt -> . HALT SEMICOLON
    (88) vazio -> .
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET

    BEGIN           shift and go to state 13
    IF              shift and go to state 30
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    ID              shift and go to state 33
    WRITELN         shift and go to state 34
    READLN          shift and go to state 35
    HALT            shift and go to state 36
    END             reduce using rule 88 (vazio -> .)
    SEMICOLON       reduce using rule 88 (vazio -> .)

    comando                        shift and go to state 77
    comando_composto               shift and go to state 21
    comando_atribuicao             shift and go to state 22
    comando_if                     shift and go to state 23
    comando_while                  shift and go to state 24
    comando_for                    shift and go to state 25
    chamada_procedimento           shift and go to state 26
    comando_halt                   shift and go to state 27
    vazio                          shift and go to state 28
    variavel                       shift and go to state 29

state 43

    (33) comando_atribuicao -> variavel ASSIGN . expressao
    (49) expressao -> . expressao_simples
    (50) expressao -> . expressao_simples relop expressao_simples
    (79) expressao -> . variavel COLON INTEGER
    (80) expressao -> . variavel COLON INTEGER COLON INTEGER
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    ID              shift and go to state 49
    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56

    variavel                       shift and go to state 46
    expressao                      shift and go to state 78
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    chamada_funcao                 shift and go to state 57

state 44

    (36) comando_if -> IF expressao . THEN comando
    (37) comando_if -> IF expressao . THEN comando ELSE comando

    THEN            shift and go to state 79


state 45

    (49) expressao -> expressao_simples .
    (50) expressao -> expressao_simples . relop expressao_simples
    (59) expressao_simples -> expressao_simples . addop termo
    (51) relop -> . EQ
    (52) relop -> . NEQ
    (53) relop -> . LT
    (54) relop -> . LE
    (55) relop -> . GT
    (56) relop -> . GE
    (57) relop -> . IN
    (60) addop -> . PLUS
    (61) addop -> . MINUS
    (62) addop -> . OR

    THEN            reduce using rule 49 (expressao -> expressao_simples .)
    DO              reduce using rule 49 (expressao -> expressao_simples .)
    END             reduce using rule 49 (expressao -> expressao_simples .)
    SEMICOLON       reduce using rule 49 (expressao -> expressao_simples .)
    ELSE            reduce using rule 49 (expressao -> expressao_simples .)
    RPAREN          reduce using rule 49 (expressao -> expressao_simples .)
    COMMA           reduce using rule 49 (expressao -> expressao_simples .)
    RBRACKET        reduce using rule 49 (expressao -> expressao_simples .)
    TO              reduce using rule 49 (expressao -> expressao_simples .)
    DOWNTO          reduce using rule 49 (expressao -> expressao_simples .)
    EQ              shift and go to state 82
    NEQ             shift and go to state 83
    LT              shift and go to state 84
    LE              shift and go to state 85
    GT              shift and go to state 86
    GE              shift and go to state 87
    IN              shift and go to state 88
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    OR              shift and go to state 91

    relop                          shift and go to state 80
    addop                          shift and go to state 81

state 46

    (79) expressao -> variavel . COLON INTEGER
    (80) expressao -> variavel . COLON INTEGER COLON INTEGER
    (70) fator -> variavel .

    COLON           shift and go to state 92
    TIMES           reduce using rule 70 (fator -> variavel .)
    DIVIDE          reduce using rule 70 (fator -> variavel .)
    DIV             reduce using rule 70 (fator -> variavel .)
    MOD             reduce using rule 70 (fator -> variavel .)
    AND             reduce using rule 70 (fator -> variavel .)
    EQ              reduce using rule 70 (fator -> variavel .)
    NEQ             reduce using rule 70 (fator -> variavel .)
    LT              reduce using rule 70 (fator -> variavel .)
    LE              reduce using rule 70 (fator -> variavel .)
    GT              reduce using rule 70 (fator -> variavel .)
    GE              reduce using rule 70 (fator -> variavel .)
    IN              reduce using rule 70 (fator -> variavel .)
    PLUS            reduce using rule 70 (fator -> variavel .)
    MINUS           reduce using rule 70 (fator -> variavel .)
    OR              reduce using rule 70 (fator -> variavel .)
    THEN            reduce using rule 70 (fator -> variavel .)
    DO              reduce using rule 70 (fator -> variavel .)
    END             reduce using rule 70 (fator -> variavel .)
    SEMICOLON       reduce using rule 70 (fator -> variavel .)
    ELSE            reduce using rule 70 (fator -> variavel .)
    RPAREN          reduce using rule 70 (fator -> variavel .)
    COMMA           reduce using rule 70 (fator -> variavel .)
    RBRACKET        reduce using rule 70 (fator -> variavel .)
    TO              reduce using rule 70 (fator -> variavel .)
    DOWNTO          reduce using rule 70 (fator -> variavel .)


state 47

    (71) fator -> INTEGER .

    TIMES           reduce using rule 71 (fator -> INTEGER .)
    DIVIDE          reduce using rule 71 (fator -> INTEGER .)
    DIV             reduce using rule 71 (fator -> INTEGER .)
    MOD             reduce using rule 71 (fator -> INTEGER .)
    AND             reduce using rule 71 (fator -> INTEGER .)
    EQ              reduce using rule 71 (fator -> INTEGER .)
    NEQ             reduce using rule 71 (fator -> INTEGER .)
    LT              reduce using rule 71 (fator -> INTEGER .)
    LE              reduce using rule 71 (fator -> INTEGER .)
    GT              reduce using rule 71 (fator -> INTEGER .)
    GE              reduce using rule 71 (fator -> INTEGER .)
    IN              reduce using rule 71 (fator -> INTEGER .)
    PLUS            reduce using rule 71 (fator -> INTEGER .)
    MINUS           reduce using rule 71 (fator -> INTEGER .)
    OR              reduce using rule 71 (fator -> INTEGER .)
    THEN            reduce using rule 71 (fator -> INTEGER .)
    DO              reduce using rule 71 (fator -> INTEGER .)
    END             reduce using rule 71 (fator -> INTEGER .)
    SEMICOLON       reduce using rule 71 (fator -> INTEGER .)
    ELSE            reduce using rule 71 (fator -> INTEGER .)
    RPAREN          reduce using rule 71 (fator -> INTEGER .)
    COMMA           reduce using rule 71 (fator -> INTEGER .)
    RBRACKET        reduce using rule 71 (fator -> INTEGER .)
    TO              reduce using rule 71 (fator -> INTEGER .)
    DOWNTO          reduce using rule 71 (fator -> INTEGER .)


state 48

    (58) expressao_simples -> termo .
    (64) termo -> termo . mulop fator
    (65) mulop -> . TIMES
    (66) mulop -> . DIVIDE
    (67) mulop -> . DIV
    (68) mulop -> . MOD
    (69) mulop -> . AND

    EQ              reduce using rule 58 (expressao_simples -> termo .)
    NEQ             reduce using rule 58 (expressao_simples -> termo .)
    LT              reduce using rule 58 (expressao_simples -> termo .)
    LE              reduce using rule 58 (expressao_simples -> termo .)
    GT              reduce using rule 58 (expressao_simples -> termo .)
    GE              reduce using rule 58 (expressao_simples -> termo .)
    IN              reduce using rule 58 (expressao_simples -> termo .)
    PLUS            reduce using rule 58 (expressao_simples -> termo .)
    MINUS           reduce using rule 58 (expressao_simples -> termo .)
    OR              reduce using rule 58 (expressao_simples -> termo .)
    THEN            reduce using rule 58 (expressao_simples -> termo .)
    DO              reduce using rule 58 (expressao_simples -> termo .)
    END             reduce using rule 58 (expressao_simples -> termo .)
    SEMICOLON       reduce using rule 58 (expressao_simples -> termo .)
    ELSE            reduce using rule 58 (expressao_simples -> termo .)
    RPAREN          reduce using rule 58 (expressao_simples -> termo .)
    COMMA           reduce using rule 58 (expressao_simples -> termo .)
    RBRACKET        reduce using rule 58 (expressao_simples -> termo .)
    TO              reduce using rule 58 (expressao_simples -> termo .)
    DOWNTO          reduce using rule 58 (expressao_simples -> termo .)
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    DIV             shift and go to state 96
    MOD             shift and go to state 97
    AND             shift and go to state 98

    mulop                          shift and go to state 93

state 49

    (34) variavel -> ID .
    (35) variavel -> ID . LBRACKET expressao RBRACKET
    (81) chamada_funcao -> ID . LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> ID . LPAREN RPAREN

    COLON           reduce using rule 34 (variavel -> ID .)
    TIMES           reduce using rule 34 (variavel -> ID .)
    DIVIDE          reduce using rule 34 (variavel -> ID .)
    DIV             reduce using rule 34 (variavel -> ID .)
    MOD             reduce using rule 34 (variavel -> ID .)
    AND             reduce using rule 34 (variavel -> ID .)
    EQ              reduce using rule 34 (variavel -> ID .)
    NEQ             reduce using rule 34 (variavel -> ID .)
    LT              reduce using rule 34 (variavel -> ID .)
    LE              reduce using rule 34 (variavel -> ID .)
    GT              reduce using rule 34 (variavel -> ID .)
    GE              reduce using rule 34 (variavel -> ID .)
    IN              reduce using rule 34 (variavel -> ID .)
    PLUS            reduce using rule 34 (variavel -> ID .)
    MINUS           reduce using rule 34 (variavel -> ID .)
    OR              reduce using rule 34 (variavel -> ID .)
    THEN            reduce using rule 34 (variavel -> ID .)
    DO              reduce using rule 34 (variavel -> ID .)
    END             reduce using rule 34 (variavel -> ID .)
    SEMICOLON       reduce using rule 34 (variavel -> ID .)
    ELSE            reduce using rule 34 (variavel -> ID .)
    RPAREN          reduce using rule 34 (variavel -> ID .)
    COMMA           reduce using rule 34 (variavel -> ID .)
    RBRACKET        reduce using rule 34 (variavel -> ID .)
    TO              reduce using rule 34 (variavel -> ID .)
    DOWNTO          reduce using rule 34 (variavel -> ID .)
    LBRACKET        shift and go to state 61
    LPAREN          shift and go to state 99


state 50

    (63) termo -> fator .

    TIMES           reduce using rule 63 (termo -> fator .)
    DIVIDE          reduce using rule 63 (termo -> fator .)
    DIV             reduce using rule 63 (termo -> fator .)
    MOD             reduce using rule 63 (termo -> fator .)
    AND             reduce using rule 63 (termo -> fator .)
    EQ              reduce using rule 63 (termo -> fator .)
    NEQ             reduce using rule 63 (termo -> fator .)
    LT              reduce using rule 63 (termo -> fator .)
    LE              reduce using rule 63 (termo -> fator .)
    GT              reduce using rule 63 (termo -> fator .)
    GE              reduce using rule 63 (termo -> fator .)
    IN              reduce using rule 63 (termo -> fator .)
    PLUS            reduce using rule 63 (termo -> fator .)
    MINUS           reduce using rule 63 (termo -> fator .)
    OR              reduce using rule 63 (termo -> fator .)
    THEN            reduce using rule 63 (termo -> fator .)
    DO              reduce using rule 63 (termo -> fator .)
    END             reduce using rule 63 (termo -> fator .)
    SEMICOLON       reduce using rule 63 (termo -> fator .)
    ELSE            reduce using rule 63 (termo -> fator .)
    RPAREN          reduce using rule 63 (termo -> fator .)
    COMMA           reduce using rule 63 (termo -> fator .)
    RBRACKET        reduce using rule 63 (termo -> fator .)
    TO              reduce using rule 63 (termo -> fator .)
    DOWNTO          reduce using rule 63 (termo -> fator .)


state 51

    (72) fator -> REAL .

    TIMES           reduce using rule 72 (fator -> REAL .)
    DIVIDE          reduce using rule 72 (fator -> REAL .)
    DIV             reduce using rule 72 (fator -> REAL .)
    MOD             reduce using rule 72 (fator -> REAL .)
    AND             reduce using rule 72 (fator -> REAL .)
    EQ              reduce using rule 72 (fator -> REAL .)
    NEQ             reduce using rule 72 (fator -> REAL .)
    LT              reduce using rule 72 (fator -> REAL .)
    LE              reduce using rule 72 (fator -> REAL .)
    GT              reduce using rule 72 (fator -> REAL .)
    GE              reduce using rule 72 (fator -> REAL .)
    IN              reduce using rule 72 (fator -> REAL .)
    PLUS            reduce using rule 72 (fator -> REAL .)
    MINUS           reduce using rule 72 (fator -> REAL .)
    OR              reduce using rule 72 (fator -> REAL .)
    THEN            reduce using rule 72 (fator -> REAL .)
    DO              reduce using rule 72 (fator -> REAL .)
    END             reduce using rule 72 (fator -> REAL .)
    SEMICOLON       reduce using rule 72 (fator -> REAL .)
    ELSE            reduce using rule 72 (fator -> REAL .)
    RPAREN          reduce using rule 72 (fator -> REAL .)
    COMMA           reduce using rule 72 (fator -> REAL .)
    RBRACKET        reduce using rule 72 (fator -> REAL .)
    TO              reduce using rule 72 (fator -> REAL .)
    DOWNTO          reduce using rule 72 (fator -> REAL .)


state 52

    (73) fator -> STRING .

    TIMES           reduce using rule 73 (fator -> STRING .)
    DIVIDE          reduce using rule 73 (fator -> STRING .)
    DIV             reduce using rule 73 (fator -> STRING .)
    MOD             reduce using rule 73 (fator -> STRING .)
    AND             reduce using rule 73 (fator -> STRING .)
    EQ              reduce using rule 73 (fator -> STRING .)
    NEQ             reduce using rule 73 (fator -> STRING .)
    LT              reduce using rule 73 (fator -> STRING .)
    LE              reduce using rule 73 (fator -> STRING .)
    GT              reduce using rule 73 (fator -> STRING .)
    GE              reduce using rule 73 (fator -> STRING .)
    IN              reduce using rule 73 (fator -> STRING .)
    PLUS            reduce using rule 73 (fator -> STRING .)
    MINUS           reduce using rule 73 (fator -> STRING .)
    OR              reduce using rule 73 (fator -> STRING .)
    THEN            reduce using rule 73 (fator -> STRING .)
    DO              reduce using rule 73 (fator -> STRING .)
    END             reduce using rule 73 (fator -> STRING .)
    SEMICOLON       reduce using rule 73 (fator -> STRING .)
    ELSE            reduce using rule 73 (fator -> STRING .)
    RPAREN          reduce using rule 73 (fator -> STRING .)
    COMMA           reduce using rule 73 (fator -> STRING .)
    RBRACKET        reduce using rule 73 (fator -> STRING .)
    TO              reduce using rule 73 (fator -> STRING .)
    DOWNTO          reduce using rule 73 (fator -> STRING .)


state 53

    (74) fator -> TRUE .

    TIMES           reduce using rule 74 (fator -> TRUE .)
    DIVIDE          reduce using rule 74 (fator -> TRUE .)
    DIV             reduce using rule 74 (fator -> TRUE .)
    MOD             reduce using rule 74 (fator -> TRUE .)
    AND             reduce using rule 74 (fator -> TRUE .)
    EQ              reduce using rule 74 (fator -> TRUE .)
    NEQ             reduce using rule 74 (fator -> TRUE .)
    LT              reduce using rule 74 (fator -> TRUE .)
    LE              reduce using rule 74 (fator -> TRUE .)
    GT              reduce using rule 74 (fator -> TRUE .)
    GE              reduce using rule 74 (fator -> TRUE .)
    IN              reduce using rule 74 (fator -> TRUE .)
    PLUS            reduce using rule 74 (fator -> TRUE .)
    MINUS           reduce using rule 74 (fator -> TRUE .)
    OR              reduce using rule 74 (fator -> TRUE .)
    THEN            reduce using rule 74 (fator -> TRUE .)
    DO              reduce using rule 74 (fator -> TRUE .)
    END             reduce using rule 74 (fator -> TRUE .)
    SEMICOLON       reduce using rule 74 (fator -> TRUE .)
    ELSE            reduce using rule 74 (fator -> TRUE .)
    RPAREN          reduce using rule 74 (fator -> TRUE .)
    COMMA           reduce using rule 74 (fator -> TRUE .)
    RBRACKET        reduce using rule 74 (fator -> TRUE .)
    TO              reduce using rule 74 (fator -> TRUE .)
    DOWNTO          reduce using rule 74 (fator -> TRUE .)


state 54

    (75) fator -> FALSE .

    TIMES           reduce using rule 75 (fator -> FALSE .)
    DIVIDE          reduce using rule 75 (fator -> FALSE .)
    DIV             reduce using rule 75 (fator -> FALSE .)
    MOD             reduce using rule 75 (fator -> FALSE .)
    AND             reduce using rule 75 (fator -> FALSE .)
    EQ              reduce using rule 75 (fator -> FALSE .)
    NEQ             reduce using rule 75 (fator -> FALSE .)
    LT              reduce using rule 75 (fator -> FALSE .)
    LE              reduce using rule 75 (fator -> FALSE .)
    GT              reduce using rule 75 (fator -> FALSE .)
    GE              reduce using rule 75 (fator -> FALSE .)
    IN              reduce using rule 75 (fator -> FALSE .)
    PLUS            reduce using rule 75 (fator -> FALSE .)
    MINUS           reduce using rule 75 (fator -> FALSE .)
    OR              reduce using rule 75 (fator -> FALSE .)
    THEN            reduce using rule 75 (fator -> FALSE .)
    DO              reduce using rule 75 (fator -> FALSE .)
    END             reduce using rule 75 (fator -> FALSE .)
    SEMICOLON       reduce using rule 75 (fator -> FALSE .)
    ELSE            reduce using rule 75 (fator -> FALSE .)
    RPAREN          reduce using rule 75 (fator -> FALSE .)
    COMMA           reduce using rule 75 (fator -> FALSE .)
    RBRACKET        reduce using rule 75 (fator -> FALSE .)
    TO              reduce using rule 75 (fator -> FALSE .)
    DOWNTO          reduce using rule 75 (fator -> FALSE .)


state 55

    (76) fator -> LPAREN . expressao RPAREN
    (49) expressao -> . expressao_simples
    (50) expressao -> . expressao_simples relop expressao_simples
    (79) expressao -> . variavel COLON INTEGER
    (80) expressao -> . variavel COLON INTEGER COLON INTEGER
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    ID              shift and go to state 49
    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56

    expressao                      shift and go to state 100
    expressao_simples              shift and go to state 45
    variavel                       shift and go to state 46
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    chamada_funcao                 shift and go to state 57

state 56

    (77) fator -> NOT . fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56
    ID              shift and go to state 49

    fator                          shift and go to state 101
    variavel                       shift and go to state 102
    chamada_funcao                 shift and go to state 57

state 57

    (78) fator -> chamada_funcao .

    TIMES           reduce using rule 78 (fator -> chamada_funcao .)
    DIVIDE          reduce using rule 78 (fator -> chamada_funcao .)
    DIV             reduce using rule 78 (fator -> chamada_funcao .)
    MOD             reduce using rule 78 (fator -> chamada_funcao .)
    AND             reduce using rule 78 (fator -> chamada_funcao .)
    EQ              reduce using rule 78 (fator -> chamada_funcao .)
    NEQ             reduce using rule 78 (fator -> chamada_funcao .)
    LT              reduce using rule 78 (fator -> chamada_funcao .)
    LE              reduce using rule 78 (fator -> chamada_funcao .)
    GT              reduce using rule 78 (fator -> chamada_funcao .)
    GE              reduce using rule 78 (fator -> chamada_funcao .)
    IN              reduce using rule 78 (fator -> chamada_funcao .)
    PLUS            reduce using rule 78 (fator -> chamada_funcao .)
    MINUS           reduce using rule 78 (fator -> chamada_funcao .)
    OR              reduce using rule 78 (fator -> chamada_funcao .)
    THEN            reduce using rule 78 (fator -> chamada_funcao .)
    DO              reduce using rule 78 (fator -> chamada_funcao .)
    END             reduce using rule 78 (fator -> chamada_funcao .)
    SEMICOLON       reduce using rule 78 (fator -> chamada_funcao .)
    ELSE            reduce using rule 78 (fator -> chamada_funcao .)
    RPAREN          reduce using rule 78 (fator -> chamada_funcao .)
    COMMA           reduce using rule 78 (fator -> chamada_funcao .)
    RBRACKET        reduce using rule 78 (fator -> chamada_funcao .)
    TO              reduce using rule 78 (fator -> chamada_funcao .)
    DOWNTO          reduce using rule 78 (fator -> chamada_funcao .)


state 58

    (38) comando_while -> WHILE expressao . DO comando

    DO              shift and go to state 103


state 59

    (39) comando_for -> FOR ID . ASSIGN expressao TO expressao DO comando
    (40) comando_for -> FOR ID . ASSIGN expressao DOWNTO expressao DO comando

    ASSIGN          shift and go to state 104


state 60

    (41) chamada_procedimento -> ID LPAREN . lista_expressoes RPAREN
    (42) chamada_procedimento -> ID LPAREN . RPAREN
    (47) lista_expressoes -> . lista_expressoes COMMA expressao
    (48) lista_expressoes -> . expressao
    (49) expressao -> . expressao_simples
    (50) expressao -> . expressao_simples relop expressao_simples
    (79) expressao -> . variavel COLON INTEGER
    (80) expressao -> . variavel COLON INTEGER COLON INTEGER
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 106
    ID              shift and go to state 49
    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56

    lista_expressoes               shift and go to state 105
    expressao                      shift and go to state 107
    expressao_simples              shift and go to state 45
    variavel                       shift and go to state 46
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    chamada_funcao                 shift and go to state 57

state 61

    (35) variavel -> ID LBRACKET . expressao RBRACKET
    (49) expressao -> . expressao_simples
    (50) expressao -> . expressao_simples relop expressao_simples
    (79) expressao -> . variavel COLON INTEGER
    (80) expressao -> . variavel COLON INTEGER COLON INTEGER
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    ID              shift and go to state 49
    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56

    expressao                      shift and go to state 108
    expressao_simples              shift and go to state 45
    variavel                       shift and go to state 46
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    chamada_funcao                 shift and go to state 57

state 62

    (43) chamada_procedimento -> WRITELN LPAREN . lista_expressoes RPAREN
    (44) chamada_procedimento -> WRITELN LPAREN . RPAREN
    (47) lista_expressoes -> . lista_expressoes COMMA expressao
    (48) lista_expressoes -> . expressao
    (49) expressao -> . expressao_simples
    (50) expressao -> . expressao_simples relop expressao_simples
    (79) expressao -> . variavel COLON INTEGER
    (80) expressao -> . variavel COLON INTEGER COLON INTEGER
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 110
    ID              shift and go to state 49
    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56

    lista_expressoes               shift and go to state 109
    expressao                      shift and go to state 107
    expressao_simples              shift and go to state 45
    variavel                       shift and go to state 46
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    chamada_funcao                 shift and go to state 57

state 63

    (45) chamada_procedimento -> READLN LPAREN . variavel RPAREN
    (46) chamada_procedimento -> READLN LPAREN . RPAREN
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET

    RPAREN          shift and go to state 112
    ID              shift and go to state 113

    variavel                       shift and go to state 111

state 64

    (87) comando_halt -> HALT SEMICOLON .

    END             reduce using rule 87 (comando_halt -> HALT SEMICOLON .)
    SEMICOLON       reduce using rule 87 (comando_halt -> HALT SEMICOLON .)
    ELSE            reduce using rule 87 (comando_halt -> HALT SEMICOLON .)


state 65

    (12) declaracao_variavel -> lista_ids COLON especificacao_tipo . SEMICOLON

    SEMICOLON       shift and go to state 114


state 66

    (15) especificacao_tipo -> INTEGER_TYPE .

    SEMICOLON       reduce using rule 15 (especificacao_tipo -> INTEGER_TYPE .)
    RPAREN          reduce using rule 15 (especificacao_tipo -> INTEGER_TYPE .)


state 67

    (16) especificacao_tipo -> REAL_TYPE .

    SEMICOLON       reduce using rule 16 (especificacao_tipo -> REAL_TYPE .)
    RPAREN          reduce using rule 16 (especificacao_tipo -> REAL_TYPE .)


state 68

    (17) especificacao_tipo -> BOOLEAN .

    SEMICOLON       reduce using rule 17 (especificacao_tipo -> BOOLEAN .)
    RPAREN          reduce using rule 17 (especificacao_tipo -> BOOLEAN .)


state 69

    (18) especificacao_tipo -> STRING_TYPE .

    SEMICOLON       reduce using rule 18 (especificacao_tipo -> STRING_TYPE .)
    RPAREN          reduce using rule 18 (especificacao_tipo -> STRING_TYPE .)


state 70

    (19) especificacao_tipo -> CHAR_TYPE .

    SEMICOLON       reduce using rule 19 (especificacao_tipo -> CHAR_TYPE .)
    RPAREN          reduce using rule 19 (especificacao_tipo -> CHAR_TYPE .)


state 71

    (20) especificacao_tipo -> tipo_array .

    SEMICOLON       reduce using rule 20 (especificacao_tipo -> tipo_array .)
    RPAREN          reduce using rule 20 (especificacao_tipo -> tipo_array .)


state 72

    (21) tipo_array -> ARRAY . LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipo

    LBRACKET        shift and go to state 115


state 73

    (13) lista_ids -> lista_ids COMMA ID .

    COLON           reduce using rule 13 (lista_ids -> lista_ids COMMA ID .)
    COMMA           reduce using rule 13 (lista_ids -> lista_ids COMMA ID .)


state 74

    (83) declaracao_funcao -> FUNCTION ID LPAREN lista_parametros . RPAREN COLON especificacao_tipo SEMICOLON bloco_funcao SEMICOLON
    (84) lista_parametros -> lista_parametros . SEMICOLON parametro

    RPAREN          shift and go to state 116
    SEMICOLON       shift and go to state 117


state 75

    (85) lista_parametros -> parametro .

    RPAREN          reduce using rule 85 (lista_parametros -> parametro .)
    SEMICOLON       reduce using rule 85 (lista_parametros -> parametro .)


state 76

    (86) parametro -> lista_ids . COLON especificacao_tipo
    (13) lista_ids -> lista_ids . COMMA ID

    COLON           shift and go to state 118
    COMMA           shift and go to state 39


state 77

    (23) lista_comandos -> lista_comandos SEMICOLON comando .

    END             reduce using rule 23 (lista_comandos -> lista_comandos SEMICOLON comando .)
    SEMICOLON       reduce using rule 23 (lista_comandos -> lista_comandos SEMICOLON comando .)


state 78

    (33) comando_atribuicao -> variavel ASSIGN expressao .

    END             reduce using rule 33 (comando_atribuicao -> variavel ASSIGN expressao .)
    SEMICOLON       reduce using rule 33 (comando_atribuicao -> variavel ASSIGN expressao .)
    ELSE            reduce using rule 33 (comando_atribuicao -> variavel ASSIGN expressao .)


state 79

    (36) comando_if -> IF expressao THEN . comando
    (37) comando_if -> IF expressao THEN . comando ELSE comando
    (25) comando -> . comando_composto
    (26) comando -> . comando_atribuicao
    (27) comando -> . comando_if
    (28) comando -> . comando_while
    (29) comando -> . comando_for
    (30) comando -> . chamada_procedimento
    (31) comando -> . comando_halt
    (32) comando -> . vazio
    (22) comando_composto -> . BEGIN lista_comandos END
    (33) comando_atribuicao -> . variavel ASSIGN expressao
    (36) comando_if -> . IF expressao THEN comando
    (37) comando_if -> . IF expressao THEN comando ELSE comando
    (38) comando_while -> . WHILE expressao DO comando
    (39) comando_for -> . FOR ID ASSIGN expressao TO expressao DO comando
    (40) comando_for -> . FOR ID ASSIGN expressao DOWNTO expressao DO comando
    (41) chamada_procedimento -> . ID LPAREN lista_expressoes RPAREN
    (42) chamada_procedimento -> . ID LPAREN RPAREN
    (43) chamada_procedimento -> . WRITELN LPAREN lista_expressoes RPAREN
    (44) chamada_procedimento -> . WRITELN LPAREN RPAREN
    (45) chamada_procedimento -> . READLN LPAREN variavel RPAREN
    (46) chamada_procedimento -> . READLN LPAREN RPAREN
    (87) comando_halt -> . HALT SEMICOLON
    (88) vazio -> .
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET

    BEGIN           shift and go to state 13
    IF              shift and go to state 30
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    ID              shift and go to state 33
    WRITELN         shift and go to state 34
    READLN          shift and go to state 35
    HALT            shift and go to state 36
    ELSE            reduce using rule 88 (vazio -> .)
    END             reduce using rule 88 (vazio -> .)
    SEMICOLON       reduce using rule 88 (vazio -> .)

    comando                        shift and go to state 119
    comando_composto               shift and go to state 21
    comando_atribuicao             shift and go to state 22
    comando_if                     shift and go to state 23
    comando_while                  shift and go to state 24
    comando_for                    shift and go to state 25
    chamada_procedimento           shift and go to state 26
    comando_halt                   shift and go to state 27
    vazio                          shift and go to state 28
    variavel                       shift and go to state 29

state 80

    (50) expressao -> expressao_simples relop . expressao_simples
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56
    ID              shift and go to state 49

    expressao_simples              shift and go to state 120
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    variavel                       shift and go to state 102
    chamada_funcao                 shift and go to state 57

state 81

    (59) expressao_simples -> expressao_simples addop . termo
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56
    ID              shift and go to state 49

    termo                          shift and go to state 121
    fator                          shift and go to state 50
    variavel                       shift and go to state 102
    chamada_funcao                 shift and go to state 57

state 82

    (51) relop -> EQ .

    INTEGER         reduce using rule 51 (relop -> EQ .)
    REAL            reduce using rule 51 (relop -> EQ .)
    STRING          reduce using rule 51 (relop -> EQ .)
    TRUE            reduce using rule 51 (relop -> EQ .)
    FALSE           reduce using rule 51 (relop -> EQ .)
    LPAREN          reduce using rule 51 (relop -> EQ .)
    NOT             reduce using rule 51 (relop -> EQ .)
    ID              reduce using rule 51 (relop -> EQ .)


state 83

    (52) relop -> NEQ .

    INTEGER         reduce using rule 52 (relop -> NEQ .)
    REAL            reduce using rule 52 (relop -> NEQ .)
    STRING          reduce using rule 52 (relop -> NEQ .)
    TRUE            reduce using rule 52 (relop -> NEQ .)
    FALSE           reduce using rule 52 (relop -> NEQ .)
    LPAREN          reduce using rule 52 (relop -> NEQ .)
    NOT             reduce using rule 52 (relop -> NEQ .)
    ID              reduce using rule 52 (relop -> NEQ .)


state 84

    (53) relop -> LT .

    INTEGER         reduce using rule 53 (relop -> LT .)
    REAL            reduce using rule 53 (relop -> LT .)
    STRING          reduce using rule 53 (relop -> LT .)
    TRUE            reduce using rule 53 (relop -> LT .)
    FALSE           reduce using rule 53 (relop -> LT .)
    LPAREN          reduce using rule 53 (relop -> LT .)
    NOT             reduce using rule 53 (relop -> LT .)
    ID              reduce using rule 53 (relop -> LT .)


state 85

    (54) relop -> LE .

    INTEGER         reduce using rule 54 (relop -> LE .)
    REAL            reduce using rule 54 (relop -> LE .)
    STRING          reduce using rule 54 (relop -> LE .)
    TRUE            reduce using rule 54 (relop -> LE .)
    FALSE           reduce using rule 54 (relop -> LE .)
    LPAREN          reduce using rule 54 (relop -> LE .)
    NOT             reduce using rule 54 (relop -> LE .)
    ID              reduce using rule 54 (relop -> LE .)


state 86

    (55) relop -> GT .

    INTEGER         reduce using rule 55 (relop -> GT .)
    REAL            reduce using rule 55 (relop -> GT .)
    STRING          reduce using rule 55 (relop -> GT .)
    TRUE            reduce using rule 55 (relop -> GT .)
    FALSE           reduce using rule 55 (relop -> GT .)
    LPAREN          reduce using rule 55 (relop -> GT .)
    NOT             reduce using rule 55 (relop -> GT .)
    ID              reduce using rule 55 (relop -> GT .)


state 87

    (56) relop -> GE .

    INTEGER         reduce using rule 56 (relop -> GE .)
    REAL            reduce using rule 56 (relop -> GE .)
    STRING          reduce using rule 56 (relop -> GE .)
    TRUE            reduce using rule 56 (relop -> GE .)
    FALSE           reduce using rule 56 (relop -> GE .)
    LPAREN          reduce using rule 56 (relop -> GE .)
    NOT             reduce using rule 56 (relop -> GE .)
    ID              reduce using rule 56 (relop -> GE .)


state 88

    (57) relop -> IN .

    INTEGER         reduce using rule 57 (relop -> IN .)
    REAL            reduce using rule 57 (relop -> IN .)
    STRING          reduce using rule 57 (relop -> IN .)
    TRUE            reduce using rule 57 (relop -> IN .)
    FALSE           reduce using rule 57 (relop -> IN .)
    LPAREN          reduce using rule 57 (relop -> IN .)
    NOT             reduce using rule 57 (relop -> IN .)
    ID              reduce using rule 57 (relop -> IN .)


state 89

    (60) addop -> PLUS .

    INTEGER         reduce using rule 60 (addop -> PLUS .)
    REAL            reduce using rule 60 (addop -> PLUS .)
    STRING          reduce using rule 60 (addop -> PLUS .)
    TRUE            reduce using rule 60 (addop -> PLUS .)
    FALSE           reduce using rule 60 (addop -> PLUS .)
    LPAREN          reduce using rule 60 (addop -> PLUS .)
    NOT             reduce using rule 60 (addop -> PLUS .)
    ID              reduce using rule 60 (addop -> PLUS .)


state 90

    (61) addop -> MINUS .

    INTEGER         reduce using rule 61 (addop -> MINUS .)
    REAL            reduce using rule 61 (addop -> MINUS .)
    STRING          reduce using rule 61 (addop -> MINUS .)
    TRUE            reduce using rule 61 (addop -> MINUS .)
    FALSE           reduce using rule 61 (addop -> MINUS .)
    LPAREN          reduce using rule 61 (addop -> MINUS .)
    NOT             reduce using rule 61 (addop -> MINUS .)
    ID              reduce using rule 61 (addop -> MINUS .)


state 91

    (62) addop -> OR .

    INTEGER         reduce using rule 62 (addop -> OR .)
    REAL            reduce using rule 62 (addop -> OR .)
    STRING          reduce using rule 62 (addop -> OR .)
    TRUE            reduce using rule 62 (addop -> OR .)
    FALSE           reduce using rule 62 (addop -> OR .)
    LPAREN          reduce using rule 62 (addop -> OR .)
    NOT             reduce using rule 62 (addop -> OR .)
    ID              reduce using rule 62 (addop -> OR .)


state 92

    (79) expressao -> variavel COLON . INTEGER
    (80) expressao -> variavel COLON . INTEGER COLON INTEGER

    INTEGER         shift and go to state 122


state 93

    (64) termo -> termo mulop . fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56
    ID              shift and go to state 49

    fator                          shift and go to state 123
    variavel                       shift and go to state 102
    chamada_funcao                 shift and go to state 57

state 94

    (65) mulop -> TIMES .

    INTEGER         reduce using rule 65 (mulop -> TIMES .)
    REAL            reduce using rule 65 (mulop -> TIMES .)
    STRING          reduce using rule 65 (mulop -> TIMES .)
    TRUE            reduce using rule 65 (mulop -> TIMES .)
    FALSE           reduce using rule 65 (mulop -> TIMES .)
    LPAREN          reduce using rule 65 (mulop -> TIMES .)
    NOT             reduce using rule 65 (mulop -> TIMES .)
    ID              reduce using rule 65 (mulop -> TIMES .)


state 95

    (66) mulop -> DIVIDE .

    INTEGER         reduce using rule 66 (mulop -> DIVIDE .)
    REAL            reduce using rule 66 (mulop -> DIVIDE .)
    STRING          reduce using rule 66 (mulop -> DIVIDE .)
    TRUE            reduce using rule 66 (mulop -> DIVIDE .)
    FALSE           reduce using rule 66 (mulop -> DIVIDE .)
    LPAREN          reduce using rule 66 (mulop -> DIVIDE .)
    NOT             reduce using rule 66 (mulop -> DIVIDE .)
    ID              reduce using rule 66 (mulop -> DIVIDE .)


state 96

    (67) mulop -> DIV .

    INTEGER         reduce using rule 67 (mulop -> DIV .)
    REAL            reduce using rule 67 (mulop -> DIV .)
    STRING          reduce using rule 67 (mulop -> DIV .)
    TRUE            reduce using rule 67 (mulop -> DIV .)
    FALSE           reduce using rule 67 (mulop -> DIV .)
    LPAREN          reduce using rule 67 (mulop -> DIV .)
    NOT             reduce using rule 67 (mulop -> DIV .)
    ID              reduce using rule 67 (mulop -> DIV .)


state 97

    (68) mulop -> MOD .

    INTEGER         reduce using rule 68 (mulop -> MOD .)
    REAL            reduce using rule 68 (mulop -> MOD .)
    STRING          reduce using rule 68 (mulop -> MOD .)
    TRUE            reduce using rule 68 (mulop -> MOD .)
    FALSE           reduce using rule 68 (mulop -> MOD .)
    LPAREN          reduce using rule 68 (mulop -> MOD .)
    NOT             reduce using rule 68 (mulop -> MOD .)
    ID              reduce using rule 68 (mulop -> MOD .)


state 98

    (69) mulop -> AND .

    INTEGER         reduce using rule 69 (mulop -> AND .)
    REAL            reduce using rule 69 (mulop -> AND .)
    STRING          reduce using rule 69 (mulop -> AND .)
    TRUE            reduce using rule 69 (mulop -> AND .)
    FALSE           reduce using rule 69 (mulop -> AND .)
    LPAREN          reduce using rule 69 (mulop -> AND .)
    NOT             reduce using rule 69 (mulop -> AND .)
    ID              reduce using rule 69 (mulop -> AND .)


state 99

    (81) chamada_funcao -> ID LPAREN . lista_expressoes RPAREN
    (82) chamada_funcao -> ID LPAREN . RPAREN
    (47) lista_expressoes -> . lista_expressoes COMMA expressao
    (48) lista_expressoes -> . expressao
    (49) expressao -> . expressao_simples
    (50) expressao -> . expressao_simples relop expressao_simples
    (79) expressao -> . variavel COLON INTEGER
    (80) expressao -> . variavel COLON INTEGER COLON INTEGER
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 125
    ID              shift and go to state 49
    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56

    lista_expressoes               shift and go to state 124
    expressao                      shift and go to state 107
    expressao_simples              shift and go to state 45
    variavel                       shift and go to state 46
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    chamada_funcao                 shift and go to state 57

state 100

    (76) fator -> LPAREN expressao . RPAREN

    RPAREN          shift and go to state 126


state 101

    (77) fator -> NOT fator .

    TIMES           reduce using rule 77 (fator -> NOT fator .)
    DIVIDE          reduce using rule 77 (fator -> NOT fator .)
    DIV             reduce using rule 77 (fator -> NOT fator .)
    MOD             reduce using rule 77 (fator -> NOT fator .)
    AND             reduce using rule 77 (fator -> NOT fator .)
    EQ              reduce using rule 77 (fator -> NOT fator .)
    NEQ             reduce using rule 77 (fator -> NOT fator .)
    LT              reduce using rule 77 (fator -> NOT fator .)
    LE              reduce using rule 77 (fator -> NOT fator .)
    GT              reduce using rule 77 (fator -> NOT fator .)
    GE              reduce using rule 77 (fator -> NOT fator .)
    IN              reduce using rule 77 (fator -> NOT fator .)
    PLUS            reduce using rule 77 (fator -> NOT fator .)
    MINUS           reduce using rule 77 (fator -> NOT fator .)
    OR              reduce using rule 77 (fator -> NOT fator .)
    THEN            reduce using rule 77 (fator -> NOT fator .)
    DO              reduce using rule 77 (fator -> NOT fator .)
    END             reduce using rule 77 (fator -> NOT fator .)
    SEMICOLON       reduce using rule 77 (fator -> NOT fator .)
    ELSE            reduce using rule 77 (fator -> NOT fator .)
    RPAREN          reduce using rule 77 (fator -> NOT fator .)
    COMMA           reduce using rule 77 (fator -> NOT fator .)
    RBRACKET        reduce using rule 77 (fator -> NOT fator .)
    TO              reduce using rule 77 (fator -> NOT fator .)
    DOWNTO          reduce using rule 77 (fator -> NOT fator .)


state 102

    (70) fator -> variavel .

    TIMES           reduce using rule 70 (fator -> variavel .)
    DIVIDE          reduce using rule 70 (fator -> variavel .)
    DIV             reduce using rule 70 (fator -> variavel .)
    MOD             reduce using rule 70 (fator -> variavel .)
    AND             reduce using rule 70 (fator -> variavel .)
    EQ              reduce using rule 70 (fator -> variavel .)
    NEQ             reduce using rule 70 (fator -> variavel .)
    LT              reduce using rule 70 (fator -> variavel .)
    LE              reduce using rule 70 (fator -> variavel .)
    GT              reduce using rule 70 (fator -> variavel .)
    GE              reduce using rule 70 (fator -> variavel .)
    IN              reduce using rule 70 (fator -> variavel .)
    PLUS            reduce using rule 70 (fator -> variavel .)
    MINUS           reduce using rule 70 (fator -> variavel .)
    OR              reduce using rule 70 (fator -> variavel .)
    THEN            reduce using rule 70 (fator -> variavel .)
    DO              reduce using rule 70 (fator -> variavel .)
    END             reduce using rule 70 (fator -> variavel .)
    SEMICOLON       reduce using rule 70 (fator -> variavel .)
    ELSE            reduce using rule 70 (fator -> variavel .)
    RPAREN          reduce using rule 70 (fator -> variavel .)
    COMMA           reduce using rule 70 (fator -> variavel .)
    RBRACKET        reduce using rule 70 (fator -> variavel .)
    TO              reduce using rule 70 (fator -> variavel .)
    DOWNTO          reduce using rule 70 (fator -> variavel .)


state 103

    (38) comando_while -> WHILE expressao DO . comando
    (25) comando -> . comando_composto
    (26) comando -> . comando_atribuicao
    (27) comando -> . comando_if
    (28) comando -> . comando_while
    (29) comando -> . comando_for
    (30) comando -> . chamada_procedimento
    (31) comando -> . comando_halt
    (32) comando -> . vazio
    (22) comando_composto -> . BEGIN lista_comandos END
    (33) comando_atribuicao -> . variavel ASSIGN expressao
    (36) comando_if -> . IF expressao THEN comando
    (37) comando_if -> . IF expressao THEN comando ELSE comando
    (38) comando_while -> . WHILE expressao DO comando
    (39) comando_for -> . FOR ID ASSIGN expressao TO expressao DO comando
    (40) comando_for -> . FOR ID ASSIGN expressao DOWNTO expressao DO comando
    (41) chamada_procedimento -> . ID LPAREN lista_expressoes RPAREN
    (42) chamada_procedimento -> . ID LPAREN RPAREN
    (43) chamada_procedimento -> . WRITELN LPAREN lista_expressoes RPAREN
    (44) chamada_procedimento -> . WRITELN LPAREN RPAREN
    (45) chamada_procedimento -> . READLN LPAREN variavel RPAREN
    (46) chamada_procedimento -> . READLN LPAREN RPAREN
    (87) comando_halt -> . HALT SEMICOLON
    (88) vazio -> .
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET

    BEGIN           shift and go to state 13
    IF              shift and go to state 30
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    ID              shift and go to state 33
    WRITELN         shift and go to state 34
    READLN          shift and go to state 35
    HALT            shift and go to state 36
    ELSE            reduce using rule 88 (vazio -> .)
    END             reduce using rule 88 (vazio -> .)
    SEMICOLON       reduce using rule 88 (vazio -> .)

    comando                        shift and go to state 127
    comando_composto               shift and go to state 21
    comando_atribuicao             shift and go to state 22
    comando_if                     shift and go to state 23
    comando_while                  shift and go to state 24
    comando_for                    shift and go to state 25
    chamada_procedimento           shift and go to state 26
    comando_halt                   shift and go to state 27
    vazio                          shift and go to state 28
    variavel                       shift and go to state 29

state 104

    (39) comando_for -> FOR ID ASSIGN . expressao TO expressao DO comando
    (40) comando_for -> FOR ID ASSIGN . expressao DOWNTO expressao DO comando
    (49) expressao -> . expressao_simples
    (50) expressao -> . expressao_simples relop expressao_simples
    (79) expressao -> . variavel COLON INTEGER
    (80) expressao -> . variavel COLON INTEGER COLON INTEGER
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    ID              shift and go to state 49
    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56

    expressao                      shift and go to state 128
    expressao_simples              shift and go to state 45
    variavel                       shift and go to state 46
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    chamada_funcao                 shift and go to state 57

state 105

    (41) chamada_procedimento -> ID LPAREN lista_expressoes . RPAREN
    (47) lista_expressoes -> lista_expressoes . COMMA expressao

    RPAREN          shift and go to state 129
    COMMA           shift and go to state 130


state 106

    (42) chamada_procedimento -> ID LPAREN RPAREN .

    END             reduce using rule 42 (chamada_procedimento -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 42 (chamada_procedimento -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 42 (chamada_procedimento -> ID LPAREN RPAREN .)


state 107

    (48) lista_expressoes -> expressao .

    RPAREN          reduce using rule 48 (lista_expressoes -> expressao .)
    COMMA           reduce using rule 48 (lista_expressoes -> expressao .)


state 108

    (35) variavel -> ID LBRACKET expressao . RBRACKET

    RBRACKET        shift and go to state 131


state 109

    (43) chamada_procedimento -> WRITELN LPAREN lista_expressoes . RPAREN
    (47) lista_expressoes -> lista_expressoes . COMMA expressao

    RPAREN          shift and go to state 132
    COMMA           shift and go to state 130


state 110

    (44) chamada_procedimento -> WRITELN LPAREN RPAREN .

    END             reduce using rule 44 (chamada_procedimento -> WRITELN LPAREN RPAREN .)
    SEMICOLON       reduce using rule 44 (chamada_procedimento -> WRITELN LPAREN RPAREN .)
    ELSE            reduce using rule 44 (chamada_procedimento -> WRITELN LPAREN RPAREN .)


state 111

    (45) chamada_procedimento -> READLN LPAREN variavel . RPAREN

    RPAREN          shift and go to state 133


state 112

    (46) chamada_procedimento -> READLN LPAREN RPAREN .

    END             reduce using rule 46 (chamada_procedimento -> READLN LPAREN RPAREN .)
    SEMICOLON       reduce using rule 46 (chamada_procedimento -> READLN LPAREN RPAREN .)
    ELSE            reduce using rule 46 (chamada_procedimento -> READLN LPAREN RPAREN .)


state 113

    (34) variavel -> ID .
    (35) variavel -> ID . LBRACKET expressao RBRACKET

    RPAREN          reduce using rule 34 (variavel -> ID .)
    LBRACKET        shift and go to state 61


state 114

    (12) declaracao_variavel -> lista_ids COLON especificacao_tipo SEMICOLON .

    ID              reduce using rule 12 (declaracao_variavel -> lista_ids COLON especificacao_tipo SEMICOLON .)
    BEGIN           reduce using rule 12 (declaracao_variavel -> lista_ids COLON especificacao_tipo SEMICOLON .)


state 115

    (21) tipo_array -> ARRAY LBRACKET . INTEGER PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipo

    INTEGER         shift and go to state 134


state 116

    (83) declaracao_funcao -> FUNCTION ID LPAREN lista_parametros RPAREN . COLON especificacao_tipo SEMICOLON bloco_funcao SEMICOLON

    COLON           shift and go to state 135


state 117

    (84) lista_parametros -> lista_parametros SEMICOLON . parametro
    (86) parametro -> . lista_ids COLON especificacao_tipo
    (13) lista_ids -> . lista_ids COMMA ID
    (14) lista_ids -> . ID

    ID              shift and go to state 17

    parametro                      shift and go to state 136
    lista_ids                      shift and go to state 76

state 118

    (86) parametro -> lista_ids COLON . especificacao_tipo
    (15) especificacao_tipo -> . INTEGER_TYPE
    (16) especificacao_tipo -> . REAL_TYPE
    (17) especificacao_tipo -> . BOOLEAN
    (18) especificacao_tipo -> . STRING_TYPE
    (19) especificacao_tipo -> . CHAR_TYPE
    (20) especificacao_tipo -> . tipo_array
    (21) tipo_array -> . ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipo

    INTEGER_TYPE    shift and go to state 66
    REAL_TYPE       shift and go to state 67
    BOOLEAN         shift and go to state 68
    STRING_TYPE     shift and go to state 69
    CHAR_TYPE       shift and go to state 70
    ARRAY           shift and go to state 72

    especificacao_tipo             shift and go to state 137
    tipo_array                     shift and go to state 71

state 119

    (36) comando_if -> IF expressao THEN comando .
    (37) comando_if -> IF expressao THEN comando . ELSE comando

  ! shift/reduce conflict for ELSE resolved as shift
    END             reduce using rule 36 (comando_if -> IF expressao THEN comando .)
    SEMICOLON       reduce using rule 36 (comando_if -> IF expressao THEN comando .)
    ELSE            shift and go to state 138

  ! ELSE            [ reduce using rule 36 (comando_if -> IF expressao THEN comando .) ]


state 120

    (50) expressao -> expressao_simples relop expressao_simples .
    (59) expressao_simples -> expressao_simples . addop termo
    (60) addop -> . PLUS
    (61) addop -> . MINUS
    (62) addop -> . OR

    THEN            reduce using rule 50 (expressao -> expressao_simples relop expressao_simples .)
    DO              reduce using rule 50 (expressao -> expressao_simples relop expressao_simples .)
    END             reduce using rule 50 (expressao -> expressao_simples relop expressao_simples .)
    SEMICOLON       reduce using rule 50 (expressao -> expressao_simples relop expressao_simples .)
    ELSE            reduce using rule 50 (expressao -> expressao_simples relop expressao_simples .)
    RPAREN          reduce using rule 50 (expressao -> expressao_simples relop expressao_simples .)
    COMMA           reduce using rule 50 (expressao -> expressao_simples relop expressao_simples .)
    RBRACKET        reduce using rule 50 (expressao -> expressao_simples relop expressao_simples .)
    TO              reduce using rule 50 (expressao -> expressao_simples relop expressao_simples .)
    DOWNTO          reduce using rule 50 (expressao -> expressao_simples relop expressao_simples .)
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    OR              shift and go to state 91

    addop                          shift and go to state 81

state 121

    (59) expressao_simples -> expressao_simples addop termo .
    (64) termo -> termo . mulop fator
    (65) mulop -> . TIMES
    (66) mulop -> . DIVIDE
    (67) mulop -> . DIV
    (68) mulop -> . MOD
    (69) mulop -> . AND

    EQ              reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    NEQ             reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    LT              reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    LE              reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    GT              reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    GE              reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    IN              reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    PLUS            reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    MINUS           reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    OR              reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    THEN            reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    DO              reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    END             reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    SEMICOLON       reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    ELSE            reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    RPAREN          reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    COMMA           reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    RBRACKET        reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    TO              reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    DOWNTO          reduce using rule 59 (expressao_simples -> expressao_simples addop termo .)
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95
    DIV             shift and go to state 96
    MOD             shift and go to state 97
    AND             shift and go to state 98

    mulop                          shift and go to state 93

state 122

    (79) expressao -> variavel COLON INTEGER .
    (80) expressao -> variavel COLON INTEGER . COLON INTEGER

    THEN            reduce using rule 79 (expressao -> variavel COLON INTEGER .)
    DO              reduce using rule 79 (expressao -> variavel COLON INTEGER .)
    END             reduce using rule 79 (expressao -> variavel COLON INTEGER .)
    SEMICOLON       reduce using rule 79 (expressao -> variavel COLON INTEGER .)
    ELSE            reduce using rule 79 (expressao -> variavel COLON INTEGER .)
    RPAREN          reduce using rule 79 (expressao -> variavel COLON INTEGER .)
    COMMA           reduce using rule 79 (expressao -> variavel COLON INTEGER .)
    RBRACKET        reduce using rule 79 (expressao -> variavel COLON INTEGER .)
    TO              reduce using rule 79 (expressao -> variavel COLON INTEGER .)
    DOWNTO          reduce using rule 79 (expressao -> variavel COLON INTEGER .)
    COLON           shift and go to state 139


state 123

    (64) termo -> termo mulop fator .

    TIMES           reduce using rule 64 (termo -> termo mulop fator .)
    DIVIDE          reduce using rule 64 (termo -> termo mulop fator .)
    DIV             reduce using rule 64 (termo -> termo mulop fator .)
    MOD             reduce using rule 64 (termo -> termo mulop fator .)
    AND             reduce using rule 64 (termo -> termo mulop fator .)
    EQ              reduce using rule 64 (termo -> termo mulop fator .)
    NEQ             reduce using rule 64 (termo -> termo mulop fator .)
    LT              reduce using rule 64 (termo -> termo mulop fator .)
    LE              reduce using rule 64 (termo -> termo mulop fator .)
    GT              reduce using rule 64 (termo -> termo mulop fator .)
    GE              reduce using rule 64 (termo -> termo mulop fator .)
    IN              reduce using rule 64 (termo -> termo mulop fator .)
    PLUS            reduce using rule 64 (termo -> termo mulop fator .)
    MINUS           reduce using rule 64 (termo -> termo mulop fator .)
    OR              reduce using rule 64 (termo -> termo mulop fator .)
    THEN            reduce using rule 64 (termo -> termo mulop fator .)
    DO              reduce using rule 64 (termo -> termo mulop fator .)
    END             reduce using rule 64 (termo -> termo mulop fator .)
    SEMICOLON       reduce using rule 64 (termo -> termo mulop fator .)
    ELSE            reduce using rule 64 (termo -> termo mulop fator .)
    RPAREN          reduce using rule 64 (termo -> termo mulop fator .)
    COMMA           reduce using rule 64 (termo -> termo mulop fator .)
    RBRACKET        reduce using rule 64 (termo -> termo mulop fator .)
    TO              reduce using rule 64 (termo -> termo mulop fator .)
    DOWNTO          reduce using rule 64 (termo -> termo mulop fator .)


state 124

    (81) chamada_funcao -> ID LPAREN lista_expressoes . RPAREN
    (47) lista_expressoes -> lista_expressoes . COMMA expressao

    RPAREN          shift and go to state 140
    COMMA           shift and go to state 130


state 125

    (82) chamada_funcao -> ID LPAREN RPAREN .

    TIMES           reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    DIV             reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    MOD             reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    AND             reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    EQ              reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    NEQ             reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    LT              reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    LE              reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    GT              reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    GE              reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    IN              reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    OR              reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    THEN            reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    DO              reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    END             reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    TO              reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)
    DOWNTO          reduce using rule 82 (chamada_funcao -> ID LPAREN RPAREN .)


state 126

    (76) fator -> LPAREN expressao RPAREN .

    TIMES           reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    DIVIDE          reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    DIV             reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    MOD             reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    AND             reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    EQ              reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    NEQ             reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    LT              reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    LE              reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    GT              reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    GE              reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    IN              reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    PLUS            reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    MINUS           reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    OR              reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    THEN            reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    DO              reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    END             reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    SEMICOLON       reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    ELSE            reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    RPAREN          reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    COMMA           reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    RBRACKET        reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    TO              reduce using rule 76 (fator -> LPAREN expressao RPAREN .)
    DOWNTO          reduce using rule 76 (fator -> LPAREN expressao RPAREN .)


state 127

    (38) comando_while -> WHILE expressao DO comando .

    END             reduce using rule 38 (comando_while -> WHILE expressao DO comando .)
    SEMICOLON       reduce using rule 38 (comando_while -> WHILE expressao DO comando .)
    ELSE            reduce using rule 38 (comando_while -> WHILE expressao DO comando .)


state 128

    (39) comando_for -> FOR ID ASSIGN expressao . TO expressao DO comando
    (40) comando_for -> FOR ID ASSIGN expressao . DOWNTO expressao DO comando

    TO              shift and go to state 141
    DOWNTO          shift and go to state 142


state 129

    (41) chamada_procedimento -> ID LPAREN lista_expressoes RPAREN .

    END             reduce using rule 41 (chamada_procedimento -> ID LPAREN lista_expressoes RPAREN .)
    SEMICOLON       reduce using rule 41 (chamada_procedimento -> ID LPAREN lista_expressoes RPAREN .)
    ELSE            reduce using rule 41 (chamada_procedimento -> ID LPAREN lista_expressoes RPAREN .)


state 130

    (47) lista_expressoes -> lista_expressoes COMMA . expressao
    (49) expressao -> . expressao_simples
    (50) expressao -> . expressao_simples relop expressao_simples
    (79) expressao -> . variavel COLON INTEGER
    (80) expressao -> . variavel COLON INTEGER COLON INTEGER
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    ID              shift and go to state 49
    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56

    expressao                      shift and go to state 143
    expressao_simples              shift and go to state 45
    variavel                       shift and go to state 46
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    chamada_funcao                 shift and go to state 57

state 131

    (35) variavel -> ID LBRACKET expressao RBRACKET .

    ASSIGN          reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    COLON           reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    TIMES           reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    DIVIDE          reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    DIV             reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    MOD             reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    AND             reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    EQ              reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    NEQ             reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    LT              reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    LE              reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    GT              reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    GE              reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    IN              reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    PLUS            reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    MINUS           reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    OR              reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    THEN            reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    DO              reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    END             reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    SEMICOLON       reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    ELSE            reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    RPAREN          reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    COMMA           reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    RBRACKET        reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    TO              reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)
    DOWNTO          reduce using rule 35 (variavel -> ID LBRACKET expressao RBRACKET .)


state 132

    (43) chamada_procedimento -> WRITELN LPAREN lista_expressoes RPAREN .

    END             reduce using rule 43 (chamada_procedimento -> WRITELN LPAREN lista_expressoes RPAREN .)
    SEMICOLON       reduce using rule 43 (chamada_procedimento -> WRITELN LPAREN lista_expressoes RPAREN .)
    ELSE            reduce using rule 43 (chamada_procedimento -> WRITELN LPAREN lista_expressoes RPAREN .)


state 133

    (45) chamada_procedimento -> READLN LPAREN variavel RPAREN .

    END             reduce using rule 45 (chamada_procedimento -> READLN LPAREN variavel RPAREN .)
    SEMICOLON       reduce using rule 45 (chamada_procedimento -> READLN LPAREN variavel RPAREN .)
    ELSE            reduce using rule 45 (chamada_procedimento -> READLN LPAREN variavel RPAREN .)


state 134

    (21) tipo_array -> ARRAY LBRACKET INTEGER . PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipo

    PERIOD          shift and go to state 144


state 135

    (83) declaracao_funcao -> FUNCTION ID LPAREN lista_parametros RPAREN COLON . especificacao_tipo SEMICOLON bloco_funcao SEMICOLON
    (15) especificacao_tipo -> . INTEGER_TYPE
    (16) especificacao_tipo -> . REAL_TYPE
    (17) especificacao_tipo -> . BOOLEAN
    (18) especificacao_tipo -> . STRING_TYPE
    (19) especificacao_tipo -> . CHAR_TYPE
    (20) especificacao_tipo -> . tipo_array
    (21) tipo_array -> . ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipo

    INTEGER_TYPE    shift and go to state 66
    REAL_TYPE       shift and go to state 67
    BOOLEAN         shift and go to state 68
    STRING_TYPE     shift and go to state 69
    CHAR_TYPE       shift and go to state 70
    ARRAY           shift and go to state 72

    especificacao_tipo             shift and go to state 145
    tipo_array                     shift and go to state 71

state 136

    (84) lista_parametros -> lista_parametros SEMICOLON parametro .

    RPAREN          reduce using rule 84 (lista_parametros -> lista_parametros SEMICOLON parametro .)
    SEMICOLON       reduce using rule 84 (lista_parametros -> lista_parametros SEMICOLON parametro .)


state 137

    (86) parametro -> lista_ids COLON especificacao_tipo .

    RPAREN          reduce using rule 86 (parametro -> lista_ids COLON especificacao_tipo .)
    SEMICOLON       reduce using rule 86 (parametro -> lista_ids COLON especificacao_tipo .)


state 138

    (37) comando_if -> IF expressao THEN comando ELSE . comando
    (25) comando -> . comando_composto
    (26) comando -> . comando_atribuicao
    (27) comando -> . comando_if
    (28) comando -> . comando_while
    (29) comando -> . comando_for
    (30) comando -> . chamada_procedimento
    (31) comando -> . comando_halt
    (32) comando -> . vazio
    (22) comando_composto -> . BEGIN lista_comandos END
    (33) comando_atribuicao -> . variavel ASSIGN expressao
    (36) comando_if -> . IF expressao THEN comando
    (37) comando_if -> . IF expressao THEN comando ELSE comando
    (38) comando_while -> . WHILE expressao DO comando
    (39) comando_for -> . FOR ID ASSIGN expressao TO expressao DO comando
    (40) comando_for -> . FOR ID ASSIGN expressao DOWNTO expressao DO comando
    (41) chamada_procedimento -> . ID LPAREN lista_expressoes RPAREN
    (42) chamada_procedimento -> . ID LPAREN RPAREN
    (43) chamada_procedimento -> . WRITELN LPAREN lista_expressoes RPAREN
    (44) chamada_procedimento -> . WRITELN LPAREN RPAREN
    (45) chamada_procedimento -> . READLN LPAREN variavel RPAREN
    (46) chamada_procedimento -> . READLN LPAREN RPAREN
    (87) comando_halt -> . HALT SEMICOLON
    (88) vazio -> .
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET

    BEGIN           shift and go to state 13
    IF              shift and go to state 30
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    ID              shift and go to state 33
    WRITELN         shift and go to state 34
    READLN          shift and go to state 35
    HALT            shift and go to state 36
    ELSE            reduce using rule 88 (vazio -> .)
    END             reduce using rule 88 (vazio -> .)
    SEMICOLON       reduce using rule 88 (vazio -> .)

    comando                        shift and go to state 146
    comando_composto               shift and go to state 21
    comando_atribuicao             shift and go to state 22
    comando_if                     shift and go to state 23
    comando_while                  shift and go to state 24
    comando_for                    shift and go to state 25
    chamada_procedimento           shift and go to state 26
    comando_halt                   shift and go to state 27
    vazio                          shift and go to state 28
    variavel                       shift and go to state 29

state 139

    (80) expressao -> variavel COLON INTEGER COLON . INTEGER

    INTEGER         shift and go to state 147


state 140

    (81) chamada_funcao -> ID LPAREN lista_expressoes RPAREN .

    TIMES           reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    DIVIDE          reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    DIV             reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    MOD             reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    AND             reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    EQ              reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    NEQ             reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    LT              reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    LE              reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    GT              reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    GE              reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    IN              reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    PLUS            reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    MINUS           reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    OR              reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    THEN            reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    DO              reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    END             reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    SEMICOLON       reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    ELSE            reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    RPAREN          reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    COMMA           reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    RBRACKET        reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    TO              reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)
    DOWNTO          reduce using rule 81 (chamada_funcao -> ID LPAREN lista_expressoes RPAREN .)


state 141

    (39) comando_for -> FOR ID ASSIGN expressao TO . expressao DO comando
    (49) expressao -> . expressao_simples
    (50) expressao -> . expressao_simples relop expressao_simples
    (79) expressao -> . variavel COLON INTEGER
    (80) expressao -> . variavel COLON INTEGER COLON INTEGER
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    ID              shift and go to state 49
    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56

    expressao                      shift and go to state 148
    expressao_simples              shift and go to state 45
    variavel                       shift and go to state 46
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    chamada_funcao                 shift and go to state 57

state 142

    (40) comando_for -> FOR ID ASSIGN expressao DOWNTO . expressao DO comando
    (49) expressao -> . expressao_simples
    (50) expressao -> . expressao_simples relop expressao_simples
    (79) expressao -> . variavel COLON INTEGER
    (80) expressao -> . variavel COLON INTEGER COLON INTEGER
    (58) expressao_simples -> . termo
    (59) expressao_simples -> . expressao_simples addop termo
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET
    (63) termo -> . fator
    (64) termo -> . termo mulop fator
    (70) fator -> . variavel
    (71) fator -> . INTEGER
    (72) fator -> . REAL
    (73) fator -> . STRING
    (74) fator -> . TRUE
    (75) fator -> . FALSE
    (76) fator -> . LPAREN expressao RPAREN
    (77) fator -> . NOT fator
    (78) fator -> . chamada_funcao
    (81) chamada_funcao -> . ID LPAREN lista_expressoes RPAREN
    (82) chamada_funcao -> . ID LPAREN RPAREN

    ID              shift and go to state 49
    INTEGER         shift and go to state 47
    REAL            shift and go to state 51
    STRING          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LPAREN          shift and go to state 55
    NOT             shift and go to state 56

    expressao                      shift and go to state 149
    expressao_simples              shift and go to state 45
    variavel                       shift and go to state 46
    termo                          shift and go to state 48
    fator                          shift and go to state 50
    chamada_funcao                 shift and go to state 57

state 143

    (47) lista_expressoes -> lista_expressoes COMMA expressao .

    RPAREN          reduce using rule 47 (lista_expressoes -> lista_expressoes COMMA expressao .)
    COMMA           reduce using rule 47 (lista_expressoes -> lista_expressoes COMMA expressao .)


state 144

    (21) tipo_array -> ARRAY LBRACKET INTEGER PERIOD . PERIOD INTEGER RBRACKET OF especificacao_tipo

    PERIOD          shift and go to state 150


state 145

    (83) declaracao_funcao -> FUNCTION ID LPAREN lista_parametros RPAREN COLON especificacao_tipo . SEMICOLON bloco_funcao SEMICOLON

    SEMICOLON       shift and go to state 151


state 146

    (37) comando_if -> IF expressao THEN comando ELSE comando .

    END             reduce using rule 37 (comando_if -> IF expressao THEN comando ELSE comando .)
    SEMICOLON       reduce using rule 37 (comando_if -> IF expressao THEN comando ELSE comando .)
    ELSE            reduce using rule 37 (comando_if -> IF expressao THEN comando ELSE comando .)


state 147

    (80) expressao -> variavel COLON INTEGER COLON INTEGER .

    THEN            reduce using rule 80 (expressao -> variavel COLON INTEGER COLON INTEGER .)
    DO              reduce using rule 80 (expressao -> variavel COLON INTEGER COLON INTEGER .)
    END             reduce using rule 80 (expressao -> variavel COLON INTEGER COLON INTEGER .)
    SEMICOLON       reduce using rule 80 (expressao -> variavel COLON INTEGER COLON INTEGER .)
    ELSE            reduce using rule 80 (expressao -> variavel COLON INTEGER COLON INTEGER .)
    RPAREN          reduce using rule 80 (expressao -> variavel COLON INTEGER COLON INTEGER .)
    COMMA           reduce using rule 80 (expressao -> variavel COLON INTEGER COLON INTEGER .)
    RBRACKET        reduce using rule 80 (expressao -> variavel COLON INTEGER COLON INTEGER .)
    TO              reduce using rule 80 (expressao -> variavel COLON INTEGER COLON INTEGER .)
    DOWNTO          reduce using rule 80 (expressao -> variavel COLON INTEGER COLON INTEGER .)


state 148

    (39) comando_for -> FOR ID ASSIGN expressao TO expressao . DO comando

    DO              shift and go to state 152


state 149

    (40) comando_for -> FOR ID ASSIGN expressao DOWNTO expressao . DO comando

    DO              shift and go to state 153


state 150

    (21) tipo_array -> ARRAY LBRACKET INTEGER PERIOD PERIOD . INTEGER RBRACKET OF especificacao_tipo

    INTEGER         shift and go to state 154


state 151

    (83) declaracao_funcao -> FUNCTION ID LPAREN lista_parametros RPAREN COLON especificacao_tipo SEMICOLON . bloco_funcao SEMICOLON
    (6) bloco_funcao -> . VAR declaracoes_variaveis comando_composto
    (7) bloco_funcao -> . comando_composto
    (22) comando_composto -> . BEGIN lista_comandos END

    VAR             shift and go to state 156
    BEGIN           shift and go to state 13

    bloco_funcao                   shift and go to state 155
    comando_composto               shift and go to state 157

state 152

    (39) comando_for -> FOR ID ASSIGN expressao TO expressao DO . comando
    (25) comando -> . comando_composto
    (26) comando -> . comando_atribuicao
    (27) comando -> . comando_if
    (28) comando -> . comando_while
    (29) comando -> . comando_for
    (30) comando -> . chamada_procedimento
    (31) comando -> . comando_halt
    (32) comando -> . vazio
    (22) comando_composto -> . BEGIN lista_comandos END
    (33) comando_atribuicao -> . variavel ASSIGN expressao
    (36) comando_if -> . IF expressao THEN comando
    (37) comando_if -> . IF expressao THEN comando ELSE comando
    (38) comando_while -> . WHILE expressao DO comando
    (39) comando_for -> . FOR ID ASSIGN expressao TO expressao DO comando
    (40) comando_for -> . FOR ID ASSIGN expressao DOWNTO expressao DO comando
    (41) chamada_procedimento -> . ID LPAREN lista_expressoes RPAREN
    (42) chamada_procedimento -> . ID LPAREN RPAREN
    (43) chamada_procedimento -> . WRITELN LPAREN lista_expressoes RPAREN
    (44) chamada_procedimento -> . WRITELN LPAREN RPAREN
    (45) chamada_procedimento -> . READLN LPAREN variavel RPAREN
    (46) chamada_procedimento -> . READLN LPAREN RPAREN
    (87) comando_halt -> . HALT SEMICOLON
    (88) vazio -> .
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET

    BEGIN           shift and go to state 13
    IF              shift and go to state 30
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    ID              shift and go to state 33
    WRITELN         shift and go to state 34
    READLN          shift and go to state 35
    HALT            shift and go to state 36
    ELSE            reduce using rule 88 (vazio -> .)
    END             reduce using rule 88 (vazio -> .)
    SEMICOLON       reduce using rule 88 (vazio -> .)

    comando                        shift and go to state 158
    comando_composto               shift and go to state 21
    comando_atribuicao             shift and go to state 22
    comando_if                     shift and go to state 23
    comando_while                  shift and go to state 24
    comando_for                    shift and go to state 25
    chamada_procedimento           shift and go to state 26
    comando_halt                   shift and go to state 27
    vazio                          shift and go to state 28
    variavel                       shift and go to state 29

state 153

    (40) comando_for -> FOR ID ASSIGN expressao DOWNTO expressao DO . comando
    (25) comando -> . comando_composto
    (26) comando -> . comando_atribuicao
    (27) comando -> . comando_if
    (28) comando -> . comando_while
    (29) comando -> . comando_for
    (30) comando -> . chamada_procedimento
    (31) comando -> . comando_halt
    (32) comando -> . vazio
    (22) comando_composto -> . BEGIN lista_comandos END
    (33) comando_atribuicao -> . variavel ASSIGN expressao
    (36) comando_if -> . IF expressao THEN comando
    (37) comando_if -> . IF expressao THEN comando ELSE comando
    (38) comando_while -> . WHILE expressao DO comando
    (39) comando_for -> . FOR ID ASSIGN expressao TO expressao DO comando
    (40) comando_for -> . FOR ID ASSIGN expressao DOWNTO expressao DO comando
    (41) chamada_procedimento -> . ID LPAREN lista_expressoes RPAREN
    (42) chamada_procedimento -> . ID LPAREN RPAREN
    (43) chamada_procedimento -> . WRITELN LPAREN lista_expressoes RPAREN
    (44) chamada_procedimento -> . WRITELN LPAREN RPAREN
    (45) chamada_procedimento -> . READLN LPAREN variavel RPAREN
    (46) chamada_procedimento -> . READLN LPAREN RPAREN
    (87) comando_halt -> . HALT SEMICOLON
    (88) vazio -> .
    (34) variavel -> . ID
    (35) variavel -> . ID LBRACKET expressao RBRACKET

    BEGIN           shift and go to state 13
    IF              shift and go to state 30
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    ID              shift and go to state 33
    WRITELN         shift and go to state 34
    READLN          shift and go to state 35
    HALT            shift and go to state 36
    ELSE            reduce using rule 88 (vazio -> .)
    END             reduce using rule 88 (vazio -> .)
    SEMICOLON       reduce using rule 88 (vazio -> .)

    comando                        shift and go to state 159
    comando_composto               shift and go to state 21
    comando_atribuicao             shift and go to state 22
    comando_if                     shift and go to state 23
    comando_while                  shift and go to state 24
    comando_for                    shift and go to state 25
    chamada_procedimento           shift and go to state 26
    comando_halt                   shift and go to state 27
    vazio                          shift and go to state 28
    variavel                       shift and go to state 29

state 154

    (21) tipo_array -> ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER . RBRACKET OF especificacao_tipo

    RBRACKET        shift and go to state 160


state 155

    (83) declaracao_funcao -> FUNCTION ID LPAREN lista_parametros RPAREN COLON especificacao_tipo SEMICOLON bloco_funcao . SEMICOLON

    SEMICOLON       shift and go to state 161


state 156

    (6) bloco_funcao -> VAR . declaracoes_variaveis comando_composto
    (10) declaracoes_variaveis -> . declaracoes_variaveis declaracao_variavel
    (11) declaracoes_variaveis -> . declaracao_variavel
    (12) declaracao_variavel -> . lista_ids COLON especificacao_tipo SEMICOLON
    (13) lista_ids -> . lista_ids COMMA ID
    (14) lista_ids -> . ID

    ID              shift and go to state 17

    declaracoes_variaveis          shift and go to state 162
    declaracao_variavel            shift and go to state 15
    lista_ids                      shift and go to state 16

state 157

    (7) bloco_funcao -> comando_composto .

    SEMICOLON       reduce using rule 7 (bloco_funcao -> comando_composto .)


state 158

    (39) comando_for -> FOR ID ASSIGN expressao TO expressao DO comando .

    END             reduce using rule 39 (comando_for -> FOR ID ASSIGN expressao TO expressao DO comando .)
    SEMICOLON       reduce using rule 39 (comando_for -> FOR ID ASSIGN expressao TO expressao DO comando .)
    ELSE            reduce using rule 39 (comando_for -> FOR ID ASSIGN expressao TO expressao DO comando .)


state 159

    (40) comando_for -> FOR ID ASSIGN expressao DOWNTO expressao DO comando .

    END             reduce using rule 40 (comando_for -> FOR ID ASSIGN expressao DOWNTO expressao DO comando .)
    SEMICOLON       reduce using rule 40 (comando_for -> FOR ID ASSIGN expressao DOWNTO expressao DO comando .)
    ELSE            reduce using rule 40 (comando_for -> FOR ID ASSIGN expressao DOWNTO expressao DO comando .)


state 160

    (21) tipo_array -> ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET . OF especificacao_tipo

    OF              shift and go to state 163


state 161

    (83) declaracao_funcao -> FUNCTION ID LPAREN lista_parametros RPAREN COLON especificacao_tipo SEMICOLON bloco_funcao SEMICOLON .

    BEGIN           reduce using rule 83 (declaracao_funcao -> FUNCTION ID LPAREN lista_parametros RPAREN COLON especificacao_tipo SEMICOLON bloco_funcao SEMICOLON .)


state 162

    (6) bloco_funcao -> VAR declaracoes_variaveis . comando_composto
    (10) declaracoes_variaveis -> declaracoes_variaveis . declaracao_variavel
    (22) comando_composto -> . BEGIN lista_comandos END
    (12) declaracao_variavel -> . lista_ids COLON especificacao_tipo SEMICOLON
    (13) lista_ids -> . lista_ids COMMA ID
    (14) lista_ids -> . ID

    BEGIN           shift and go to state 13
    ID              shift and go to state 17

    comando_composto               shift and go to state 164
    declaracao_variavel            shift and go to state 37
    lista_ids                      shift and go to state 16

state 163

    (21) tipo_array -> ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET OF . especificacao_tipo
    (15) especificacao_tipo -> . INTEGER_TYPE
    (16) especificacao_tipo -> . REAL_TYPE
    (17) especificacao_tipo -> . BOOLEAN
    (18) especificacao_tipo -> . STRING_TYPE
    (19) especificacao_tipo -> . CHAR_TYPE
    (20) especificacao_tipo -> . tipo_array
    (21) tipo_array -> . ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipo

    INTEGER_TYPE    shift and go to state 66
    REAL_TYPE       shift and go to state 67
    BOOLEAN         shift and go to state 68
    STRING_TYPE     shift and go to state 69
    CHAR_TYPE       shift and go to state 70
    ARRAY           shift and go to state 72

    especificacao_tipo             shift and go to state 165
    tipo_array                     shift and go to state 71

state 164

    (6) bloco_funcao -> VAR declaracoes_variaveis comando_composto .

    SEMICOLON       reduce using rule 6 (bloco_funcao -> VAR declaracoes_variaveis comando_composto .)


state 165

    (21) tipo_array -> ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipo .

    SEMICOLON       reduce using rule 21 (tipo_array -> ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipo .)
    RPAREN          reduce using rule 21 (tipo_array -> ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipo .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 119 resolved as shift
