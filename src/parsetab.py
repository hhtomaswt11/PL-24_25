
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APOSTROPHE ARRAY ASSIGN BEGIN BOOLEAN CASE CHAR_TYPE COLON COMMA COMMENT CONST DIV DIVIDE DO DOWNTO ELSE END EQ FALSE FILE FOR FUNCTION GE GOTO GT HALT ID IF IN INTEGER INTEGER_TYPE LABEL LBRACKET LE LPAREN LT MINUS MOD NEQ NIL NOT OF OR PACKED PERIOD PLUS PROCEDURE PROGRAM RBRACKET READ READLN REAL REAL_TYPE RECORD REPEAT RPAREN SEMICOLON SET STRING STRING_TYPE THEN TIMES TO TRUE TYPE UNTIL VAR WHILE WITH WRITE WRITELNprograma : PROGRAM ID SEMICOLON bloco PERIODbloco : declaracoes comando_compostodeclaracoes : VAR declaracoes_variaveis\n                       | declaracao_funcao\n                       | vaziobloco_funcao : VAR declaracoes_variaveis comando_composto\n                        | comando_compostodeclaracao : VAR declaracoes_variaveis\n                      | declaracao_funcaodeclaracoes_variaveis : declaracoes_variaveis declaracao_variavel\n                                 | declaracao_variaveldeclaracao_variavel : lista_ids COLON especificacao_tipo SEMICOLONlista_ids : lista_ids COMMA ID\n                     | IDespecificacao_tipo : INTEGER_TYPE\n                              | REAL_TYPE\n                              | BOOLEAN\n                              | STRING_TYPE\n                              | CHAR_TYPE\n                              | tipo_arraytipo_array : ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipocomando_composto : BEGIN lista_comandos ENDlista_comandos : lista_comandos SEMICOLON comando\n                          | comandocomando : comando_composto\n                   | comando_atribuicao\n                   | comando_if\n                   | comando_while\n                   | comando_for\n                   | chamada_procedimento\n                   | comando_halt\n                   | vaziocomando_atribuicao : variavel ASSIGN expressaovariavel : ID\n                    | ID LBRACKET expressao RBRACKETcomando_if : IF expressao THEN comando\n                      | IF expressao THEN comando ELSE comandocomando_while : WHILE expressao DO comandocomando_for : FOR ID ASSIGN expressao TO expressao DO comando\n                       | FOR ID ASSIGN expressao DOWNTO expressao DO comandochamada_procedimento : ID LPAREN lista_expressoes RPAREN\n                                | ID LPAREN RPAREN\n                                | WRITELN LPAREN lista_expressoes RPAREN\n                                | WRITELN LPAREN RPAREN\n                                | READLN LPAREN variavel RPAREN\n                                | READLN LPAREN RPARENlista_expressoes : lista_expressoes COMMA expressao\n                            | expressaoexpressao : expressao_simples\n                     | expressao_simples relop expressao_simplesrelop : EQ\n                 | NEQ\n                 | LT\n                 | LE\n                 | GT\n                 | GE\n                 | INexpressao_simples : termo\n                             | expressao_simples addop termoaddop : PLUS\n                 | MINUS\n                 | ORtermo : fator\n                 | termo mulop fatormulop : TIMES\n                 | DIVIDE\n                 | DIV\n                 | MOD\n                 | ANDfator : variavel\n                 | INTEGER\n                 | REAL\n                 | STRING\n                 | TRUE\n                 | FALSE\n                 | LPAREN expressao RPAREN\n                 | NOT fator\n                 | chamada_funcaoexpressao : variavel COLON INTEGER\n                     | variavel COLON INTEGER COLON INTEGERchamada_funcao : ID LPAREN lista_expressoes RPAREN\n                          | ID LPAREN RPARENdeclaracao_funcao : FUNCTION ID LPAREN lista_parametros RPAREN COLON especificacao_tipo SEMICOLON bloco_funcao SEMICOLONlista_parametros : lista_parametros SEMICOLON parametro\n                            | parametroparametro : lista_ids COLON especificacao_tipocomando_halt : HALT SEMICOLONvazio :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,11,],[0,-1,]),'ID':([2,7,10,13,14,15,30,31,32,37,39,40,42,43,55,56,60,61,62,63,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,103,104,114,117,130,138,141,142,152,153,156,162,],[3,17,18,33,17,-11,49,49,59,-10,73,17,33,49,49,49,49,49,49,113,33,49,49,-51,-52,-53,-54,-55,-56,-57,-60,-61,-62,49,-65,-66,-67,-68,-69,49,33,49,-12,17,49,33,49,49,33,33,17,17,]),'SEMICOLON':([3,13,19,20,21,22,23,24,25,26,27,28,36,41,42,45,46,47,48,49,50,51,52,53,54,57,64,65,66,67,68,69,70,71,74,75,77,78,79,101,102,103,106,110,112,119,120,121,122,123,125,126,127,129,131,132,133,136,137,138,140,145,146,147,152,153,155,157,158,159,164,165,],[4,-88,42,-24,-25,-26,-27,-28,-29,-30,-31,-32,64,-22,-88,-49,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-87,114,-15,-16,-17,-18,-19,-20,117,-85,-23,-33,-88,-77,-70,-88,-42,-44,-46,-36,-50,-59,-79,-64,-82,-76,-38,-41,-35,-43,-45,-84,-86,-88,-81,151,-37,-80,-88,-88,161,-7,-39,-40,-6,-21,]),'VAR':([4,151,],[7,156,]),'FUNCTION':([4,],[10,]),'BEGIN':([4,6,8,9,13,14,15,37,42,79,103,114,138,151,152,153,161,162,],[-88,13,-4,-5,13,-3,-11,-10,13,13,13,-12,13,13,13,13,-83,13,]),'PERIOD':([5,12,41,134,144,],[11,-2,-22,144,150,]),'IF':([13,42,79,103,138,152,153,],[30,30,30,30,30,30,30,]),'WHILE':([13,42,79,103,138,152,153,],[31,31,31,31,31,31,31,]),'FOR':([13,42,79,103,138,152,153,],[32,32,32,32,32,32,32,]),'WRITELN':([13,42,79,103,138,152,153,],[34,34,34,34,34,34,34,]),'READLN':([13,42,79,103,138,152,153,],[35,35,35,35,35,35,35,]),'HALT':([13,42,79,103,138,152,153,],[36,36,36,36,36,36,36,]),'END':([13,19,20,21,22,23,24,25,26,27,28,41,42,45,46,47,48,49,50,51,52,53,54,57,64,77,78,79,101,102,103,106,110,112,119,120,121,122,123,125,126,127,129,131,132,133,138,140,146,147,152,153,158,159,],[-88,41,-24,-25,-26,-27,-28,-29,-30,-31,-32,-22,-88,-49,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-87,-23,-33,-88,-77,-70,-88,-42,-44,-46,-36,-50,-59,-79,-64,-82,-76,-38,-41,-35,-43,-45,-88,-81,-37,-80,-88,-88,-39,-40,]),'COLON':([16,17,46,49,73,76,116,122,131,],[38,-14,92,-34,-13,118,135,139,-35,]),'COMMA':([16,17,45,46,47,48,49,50,51,52,53,54,57,73,76,101,102,105,107,109,120,121,122,123,124,125,126,131,140,143,147,],[39,-14,-49,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-13,39,-77,-70,130,-48,130,-50,-59,-79,-64,130,-82,-76,-35,-81,-47,-80,]),'LPAREN':([18,30,31,33,34,35,43,49,55,56,60,61,62,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,104,130,141,142,],[40,55,55,60,62,63,55,99,55,55,55,55,55,55,55,-51,-52,-53,-54,-55,-56,-57,-60,-61,-62,55,-65,-66,-67,-68,-69,55,55,55,55,55,]),'ELSE':([21,22,23,24,25,26,27,28,41,45,46,47,48,49,50,51,52,53,54,57,64,78,79,101,102,103,106,110,112,119,120,121,122,123,125,126,127,129,131,132,133,138,140,146,147,152,153,158,159,],[-25,-26,-27,-28,-29,-30,-31,-32,-22,-49,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-87,-33,-88,-77,-70,-88,-42,-44,-46,138,-50,-59,-79,-64,-82,-76,-38,-41,-35,-43,-45,-88,-81,-37,-80,-88,-88,-39,-40,]),'ASSIGN':([29,33,59,131,],[43,-34,104,-35,]),'INTEGER':([30,31,43,55,56,60,61,62,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,115,130,139,141,142,150,],[47,47,47,47,47,47,47,47,47,47,-51,-52,-53,-54,-55,-56,-57,-60,-61,-62,122,47,-65,-66,-67,-68,-69,47,47,134,47,147,47,47,154,]),'REAL':([30,31,43,55,56,60,61,62,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,104,130,141,142,],[51,51,51,51,51,51,51,51,51,51,-51,-52,-53,-54,-55,-56,-57,-60,-61,-62,51,-65,-66,-67,-68,-69,51,51,51,51,51,]),'STRING':([30,31,43,55,56,60,61,62,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,104,130,141,142,],[52,52,52,52,52,52,52,52,52,52,-51,-52,-53,-54,-55,-56,-57,-60,-61,-62,52,-65,-66,-67,-68,-69,52,52,52,52,52,]),'TRUE':([30,31,43,55,56,60,61,62,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,104,130,141,142,],[53,53,53,53,53,53,53,53,53,53,-51,-52,-53,-54,-55,-56,-57,-60,-61,-62,53,-65,-66,-67,-68,-69,53,53,53,53,53,]),'FALSE':([30,31,43,55,56,60,61,62,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,104,130,141,142,],[54,54,54,54,54,54,54,54,54,54,-51,-52,-53,-54,-55,-56,-57,-60,-61,-62,54,-65,-66,-67,-68,-69,54,54,54,54,54,]),'NOT':([30,31,43,55,56,60,61,62,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,104,130,141,142,],[56,56,56,56,56,56,56,56,56,56,-51,-52,-53,-54,-55,-56,-57,-60,-61,-62,56,-65,-66,-67,-68,-69,56,56,56,56,56,]),'LBRACKET':([33,49,72,113,],[61,61,115,61,]),'INTEGER_TYPE':([38,118,135,163,],[66,66,66,66,]),'REAL_TYPE':([38,118,135,163,],[67,67,67,67,]),'BOOLEAN':([38,118,135,163,],[68,68,68,68,]),'STRING_TYPE':([38,118,135,163,],[69,69,69,69,]),'CHAR_TYPE':([38,118,135,163,],[70,70,70,70,]),'ARRAY':([38,118,135,163,],[72,72,72,72,]),'THEN':([44,45,46,47,48,49,50,51,52,53,54,57,101,102,120,121,122,123,125,126,131,140,147,],[79,-49,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,-50,-59,-79,-64,-82,-76,-35,-81,-80,]),'DO':([45,46,47,48,49,50,51,52,53,54,57,58,101,102,120,121,122,123,125,126,131,140,147,148,149,],[-49,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,103,-77,-70,-50,-59,-79,-64,-82,-76,-35,-81,-80,152,153,]),'RPAREN':([45,46,47,48,49,50,51,52,53,54,57,60,62,63,66,67,68,69,70,71,74,75,99,100,101,102,105,107,109,111,113,120,121,122,123,124,125,126,131,136,137,140,143,147,165,],[-49,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,106,110,112,-15,-16,-17,-18,-19,-20,116,-85,125,126,-77,-70,129,-48,132,133,-34,-50,-59,-79,-64,140,-82,-76,-35,-84,-86,-81,-47,-80,-21,]),'RBRACKET':([45,46,47,48,49,50,51,52,53,54,57,101,102,108,120,121,122,123,125,126,131,140,147,154,],[-49,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,131,-50,-59,-79,-64,-82,-76,-35,-81,-80,160,]),'TO':([45,46,47,48,49,50,51,52,53,54,57,101,102,120,121,122,123,125,126,128,131,140,147,],[-49,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,-50,-59,-79,-64,-82,-76,141,-35,-81,-80,]),'DOWNTO':([45,46,47,48,49,50,51,52,53,54,57,101,102,120,121,122,123,125,126,128,131,140,147,],[-49,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,-50,-59,-79,-64,-82,-76,142,-35,-81,-80,]),'EQ':([45,46,47,48,49,50,51,52,53,54,57,101,102,121,123,125,126,131,140,],[82,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,-59,-64,-82,-76,-35,-81,]),'NEQ':([45,46,47,48,49,50,51,52,53,54,57,101,102,121,123,125,126,131,140,],[83,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,-59,-64,-82,-76,-35,-81,]),'LT':([45,46,47,48,49,50,51,52,53,54,57,101,102,121,123,125,126,131,140,],[84,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,-59,-64,-82,-76,-35,-81,]),'LE':([45,46,47,48,49,50,51,52,53,54,57,101,102,121,123,125,126,131,140,],[85,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,-59,-64,-82,-76,-35,-81,]),'GT':([45,46,47,48,49,50,51,52,53,54,57,101,102,121,123,125,126,131,140,],[86,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,-59,-64,-82,-76,-35,-81,]),'GE':([45,46,47,48,49,50,51,52,53,54,57,101,102,121,123,125,126,131,140,],[87,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,-59,-64,-82,-76,-35,-81,]),'IN':([45,46,47,48,49,50,51,52,53,54,57,101,102,121,123,125,126,131,140,],[88,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,-59,-64,-82,-76,-35,-81,]),'PLUS':([45,46,47,48,49,50,51,52,53,54,57,101,102,120,121,123,125,126,131,140,],[89,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,89,-59,-64,-82,-76,-35,-81,]),'MINUS':([45,46,47,48,49,50,51,52,53,54,57,101,102,120,121,123,125,126,131,140,],[90,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,90,-59,-64,-82,-76,-35,-81,]),'OR':([45,46,47,48,49,50,51,52,53,54,57,101,102,120,121,123,125,126,131,140,],[91,-70,-71,-58,-34,-63,-72,-73,-74,-75,-78,-77,-70,91,-59,-64,-82,-76,-35,-81,]),'TIMES':([46,47,48,49,50,51,52,53,54,57,101,102,121,123,125,126,131,140,],[-70,-71,94,-34,-63,-72,-73,-74,-75,-78,-77,-70,94,-64,-82,-76,-35,-81,]),'DIVIDE':([46,47,48,49,50,51,52,53,54,57,101,102,121,123,125,126,131,140,],[-70,-71,95,-34,-63,-72,-73,-74,-75,-78,-77,-70,95,-64,-82,-76,-35,-81,]),'DIV':([46,47,48,49,50,51,52,53,54,57,101,102,121,123,125,126,131,140,],[-70,-71,96,-34,-63,-72,-73,-74,-75,-78,-77,-70,96,-64,-82,-76,-35,-81,]),'MOD':([46,47,48,49,50,51,52,53,54,57,101,102,121,123,125,126,131,140,],[-70,-71,97,-34,-63,-72,-73,-74,-75,-78,-77,-70,97,-64,-82,-76,-35,-81,]),'AND':([46,47,48,49,50,51,52,53,54,57,101,102,121,123,125,126,131,140,],[-70,-71,98,-34,-63,-72,-73,-74,-75,-78,-77,-70,98,-64,-82,-76,-35,-81,]),'OF':([160,],[163,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'bloco':([4,],[5,]),'declaracoes':([4,],[6,]),'declaracao_funcao':([4,],[8,]),'vazio':([4,13,42,79,103,138,152,153,],[9,28,28,28,28,28,28,28,]),'comando_composto':([6,13,42,79,103,138,151,152,153,162,],[12,21,21,21,21,21,157,21,21,164,]),'declaracoes_variaveis':([7,156,],[14,162,]),'declaracao_variavel':([7,14,156,162,],[15,37,15,37,]),'lista_ids':([7,14,40,117,156,162,],[16,16,76,76,16,16,]),'lista_comandos':([13,],[19,]),'comando':([13,42,79,103,138,152,153,],[20,77,119,127,146,158,159,]),'comando_atribuicao':([13,42,79,103,138,152,153,],[22,22,22,22,22,22,22,]),'comando_if':([13,42,79,103,138,152,153,],[23,23,23,23,23,23,23,]),'comando_while':([13,42,79,103,138,152,153,],[24,24,24,24,24,24,24,]),'comando_for':([13,42,79,103,138,152,153,],[25,25,25,25,25,25,25,]),'chamada_procedimento':([13,42,79,103,138,152,153,],[26,26,26,26,26,26,26,]),'comando_halt':([13,42,79,103,138,152,153,],[27,27,27,27,27,27,27,]),'variavel':([13,30,31,42,43,55,56,60,61,62,63,79,80,81,93,99,103,104,130,138,141,142,152,153,],[29,46,46,29,46,46,102,46,46,46,111,29,102,102,102,46,29,46,46,29,46,46,29,29,]),'expressao':([30,31,43,55,60,61,62,99,104,130,141,142,],[44,58,78,100,107,108,107,107,128,143,148,149,]),'expressao_simples':([30,31,43,55,60,61,62,80,99,104,130,141,142,],[45,45,45,45,45,45,45,120,45,45,45,45,45,]),'termo':([30,31,43,55,60,61,62,80,81,99,104,130,141,142,],[48,48,48,48,48,48,48,48,121,48,48,48,48,48,]),'fator':([30,31,43,55,56,60,61,62,80,81,93,99,104,130,141,142,],[50,50,50,50,101,50,50,50,50,50,123,50,50,50,50,50,]),'chamada_funcao':([30,31,43,55,56,60,61,62,80,81,93,99,104,130,141,142,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'especificacao_tipo':([38,118,135,163,],[65,137,145,165,]),'tipo_array':([38,118,135,163,],[71,71,71,71,]),'lista_parametros':([40,],[74,]),'parametro':([40,117,],[75,136,]),'relop':([45,],[80,]),'addop':([45,120,],[81,81,]),'mulop':([48,121,],[93,93,]),'lista_expressoes':([60,62,99,],[105,109,124,]),'bloco_funcao':([151,],[155,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMICOLON bloco PERIOD','programa',5,'p_programa','parser.py',43),
  ('bloco -> declaracoes comando_composto','bloco',2,'p_bloco','parser.py',48),
  ('declaracoes -> VAR declaracoes_variaveis','declaracoes',2,'p_declaracoes','parser.py',52),
  ('declaracoes -> declaracao_funcao','declaracoes',1,'p_declaracoes','parser.py',53),
  ('declaracoes -> vazio','declaracoes',1,'p_declaracoes','parser.py',54),
  ('bloco_funcao -> VAR declaracoes_variaveis comando_composto','bloco_funcao',3,'p_bloco_funcao','parser.py',63),
  ('bloco_funcao -> comando_composto','bloco_funcao',1,'p_bloco_funcao','parser.py',64),
  ('declaracao -> VAR declaracoes_variaveis','declaracao',2,'p_declaracao','parser.py',74),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','parser.py',75),
  ('declaracoes_variaveis -> declaracoes_variaveis declaracao_variavel','declaracoes_variaveis',2,'p_declaracoes_variaveis','parser.py',81),
  ('declaracoes_variaveis -> declaracao_variavel','declaracoes_variaveis',1,'p_declaracoes_variaveis','parser.py',82),
  ('declaracao_variavel -> lista_ids COLON especificacao_tipo SEMICOLON','declaracao_variavel',4,'p_declaracao_variavel','parser.py',91),
  ('lista_ids -> lista_ids COMMA ID','lista_ids',3,'p_lista_ids','parser.py',101),
  ('lista_ids -> ID','lista_ids',1,'p_lista_ids','parser.py',102),
  ('especificacao_tipo -> INTEGER_TYPE','especificacao_tipo',1,'p_especificacao_tipo','parser.py',111),
  ('especificacao_tipo -> REAL_TYPE','especificacao_tipo',1,'p_especificacao_tipo','parser.py',112),
  ('especificacao_tipo -> BOOLEAN','especificacao_tipo',1,'p_especificacao_tipo','parser.py',113),
  ('especificacao_tipo -> STRING_TYPE','especificacao_tipo',1,'p_especificacao_tipo','parser.py',114),
  ('especificacao_tipo -> CHAR_TYPE','especificacao_tipo',1,'p_especificacao_tipo','parser.py',115),
  ('especificacao_tipo -> tipo_array','especificacao_tipo',1,'p_especificacao_tipo','parser.py',116),
  ('tipo_array -> ARRAY LBRACKET INTEGER PERIOD PERIOD INTEGER RBRACKET OF especificacao_tipo','tipo_array',9,'p_tipo_array','parser.py',125),
  ('comando_composto -> BEGIN lista_comandos END','comando_composto',3,'p_comando_composto','parser.py',130),
  ('lista_comandos -> lista_comandos SEMICOLON comando','lista_comandos',3,'p_lista_comandos','parser.py',135),
  ('lista_comandos -> comando','lista_comandos',1,'p_lista_comandos','parser.py',136),
  ('comando -> comando_composto','comando',1,'p_comando','parser.py',149),
  ('comando -> comando_atribuicao','comando',1,'p_comando','parser.py',150),
  ('comando -> comando_if','comando',1,'p_comando','parser.py',151),
  ('comando -> comando_while','comando',1,'p_comando','parser.py',152),
  ('comando -> comando_for','comando',1,'p_comando','parser.py',153),
  ('comando -> chamada_procedimento','comando',1,'p_comando','parser.py',154),
  ('comando -> comando_halt','comando',1,'p_comando','parser.py',155),
  ('comando -> vazio','comando',1,'p_comando','parser.py',156),
  ('comando_atribuicao -> variavel ASSIGN expressao','comando_atribuicao',3,'p_comando_atribuicao','parser.py',161),
  ('variavel -> ID','variavel',1,'p_variavel','parser.py',165),
  ('variavel -> ID LBRACKET expressao RBRACKET','variavel',4,'p_variavel','parser.py',166),
  ('comando_if -> IF expressao THEN comando','comando_if',4,'p_comando_if','parser.py',175),
  ('comando_if -> IF expressao THEN comando ELSE comando','comando_if',6,'p_comando_if','parser.py',176),
  ('comando_while -> WHILE expressao DO comando','comando_while',4,'p_comando_while','parser.py',185),
  ('comando_for -> FOR ID ASSIGN expressao TO expressao DO comando','comando_for',8,'p_comando_for','parser.py',190),
  ('comando_for -> FOR ID ASSIGN expressao DOWNTO expressao DO comando','comando_for',8,'p_comando_for','parser.py',191),
  ('chamada_procedimento -> ID LPAREN lista_expressoes RPAREN','chamada_procedimento',4,'p_chamada_procedimento','parser.py',197),
  ('chamada_procedimento -> ID LPAREN RPAREN','chamada_procedimento',3,'p_chamada_procedimento','parser.py',198),
  ('chamada_procedimento -> WRITELN LPAREN lista_expressoes RPAREN','chamada_procedimento',4,'p_chamada_procedimento','parser.py',199),
  ('chamada_procedimento -> WRITELN LPAREN RPAREN','chamada_procedimento',3,'p_chamada_procedimento','parser.py',200),
  ('chamada_procedimento -> READLN LPAREN variavel RPAREN','chamada_procedimento',4,'p_chamada_procedimento','parser.py',201),
  ('chamada_procedimento -> READLN LPAREN RPAREN','chamada_procedimento',3,'p_chamada_procedimento','parser.py',202),
  ('lista_expressoes -> lista_expressoes COMMA expressao','lista_expressoes',3,'p_lista_expressoes','parser.py',218),
  ('lista_expressoes -> expressao','lista_expressoes',1,'p_lista_expressoes','parser.py',219),
  ('expressao -> expressao_simples','expressao',1,'p_expressao','parser.py',230),
  ('expressao -> expressao_simples relop expressao_simples','expressao',3,'p_expressao','parser.py',231),
  ('relop -> EQ','relop',1,'p_relop','parser.py',239),
  ('relop -> NEQ','relop',1,'p_relop','parser.py',240),
  ('relop -> LT','relop',1,'p_relop','parser.py',241),
  ('relop -> LE','relop',1,'p_relop','parser.py',242),
  ('relop -> GT','relop',1,'p_relop','parser.py',243),
  ('relop -> GE','relop',1,'p_relop','parser.py',244),
  ('relop -> IN','relop',1,'p_relop','parser.py',245),
  ('expressao_simples -> termo','expressao_simples',1,'p_expressao_simples','parser.py',250),
  ('expressao_simples -> expressao_simples addop termo','expressao_simples',3,'p_expressao_simples','parser.py',251),
  ('addop -> PLUS','addop',1,'p_addop','parser.py',259),
  ('addop -> MINUS','addop',1,'p_addop','parser.py',260),
  ('addop -> OR','addop',1,'p_addop','parser.py',261),
  ('termo -> fator','termo',1,'p_termo','parser.py',266),
  ('termo -> termo mulop fator','termo',3,'p_termo','parser.py',267),
  ('mulop -> TIMES','mulop',1,'p_mulop','parser.py',275),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','parser.py',276),
  ('mulop -> DIV','mulop',1,'p_mulop','parser.py',277),
  ('mulop -> MOD','mulop',1,'p_mulop','parser.py',278),
  ('mulop -> AND','mulop',1,'p_mulop','parser.py',279),
  ('fator -> variavel','fator',1,'p_fator','parser.py',284),
  ('fator -> INTEGER','fator',1,'p_fator','parser.py',285),
  ('fator -> REAL','fator',1,'p_fator','parser.py',286),
  ('fator -> STRING','fator',1,'p_fator','parser.py',287),
  ('fator -> TRUE','fator',1,'p_fator','parser.py',288),
  ('fator -> FALSE','fator',1,'p_fator','parser.py',289),
  ('fator -> LPAREN expressao RPAREN','fator',3,'p_fator','parser.py',290),
  ('fator -> NOT fator','fator',2,'p_fator','parser.py',291),
  ('fator -> chamada_funcao','fator',1,'p_fator','parser.py',292),
  ('expressao -> variavel COLON INTEGER','expressao',3,'p_expressao_formatada','parser.py',310),
  ('expressao -> variavel COLON INTEGER COLON INTEGER','expressao',5,'p_expressao_formatada','parser.py',311),
  ('chamada_funcao -> ID LPAREN lista_expressoes RPAREN','chamada_funcao',4,'p_chamada_funcao','parser.py',320),
  ('chamada_funcao -> ID LPAREN RPAREN','chamada_funcao',3,'p_chamada_funcao','parser.py',321),
  ('declaracao_funcao -> FUNCTION ID LPAREN lista_parametros RPAREN COLON especificacao_tipo SEMICOLON bloco_funcao SEMICOLON','declaracao_funcao',10,'p_declaracao_funcao','parser.py',329),
  ('lista_parametros -> lista_parametros SEMICOLON parametro','lista_parametros',3,'p_lista_parametros','parser.py',334),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros','parser.py',335),
  ('parametro -> lista_ids COLON especificacao_tipo','parametro',3,'p_parametro','parser.py',343),
  ('comando_halt -> HALT SEMICOLON','comando_halt',2,'p_comando_halt','parser.py',349),
  ('vazio -> <empty>','vazio',0,'p_vazio','parser.py',355),
]
